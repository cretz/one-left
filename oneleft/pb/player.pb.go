// Code generated by protoc-gen-go. DO NOT EDIT.
// source: player.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PlayerIdentity struct {
	// ID is pub key
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Sig                  []byte   `protobuf:"bytes,4,opt,name=sig,proto3" json:"sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerIdentity) Reset()         { *m = PlayerIdentity{} }
func (m *PlayerIdentity) String() string { return proto.CompactTextString(m) }
func (*PlayerIdentity) ProtoMessage()    {}
func (*PlayerIdentity) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_d4a92a7eae251313, []int{0}
}
func (m *PlayerIdentity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerIdentity.Unmarshal(m, b)
}
func (m *PlayerIdentity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerIdentity.Marshal(b, m, deterministic)
}
func (dst *PlayerIdentity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerIdentity.Merge(dst, src)
}
func (m *PlayerIdentity) XXX_Size() int {
	return xxx_messageInfo_PlayerIdentity.Size(m)
}
func (m *PlayerIdentity) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerIdentity.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerIdentity proto.InternalMessageInfo

func (m *PlayerIdentity) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *PlayerIdentity) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PlayerIdentity) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

type JoinRequest struct {
	ToSign               []byte   `protobuf:"bytes,1,opt,name=to_sign,json=toSign,proto3" json:"to_sign,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinRequest) Reset()         { *m = JoinRequest{} }
func (m *JoinRequest) String() string { return proto.CompactTextString(m) }
func (*JoinRequest) ProtoMessage()    {}
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_d4a92a7eae251313, []int{1}
}
func (m *JoinRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinRequest.Unmarshal(m, b)
}
func (m *JoinRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinRequest.Marshal(b, m, deterministic)
}
func (dst *JoinRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinRequest.Merge(dst, src)
}
func (m *JoinRequest) XXX_Size() int {
	return xxx_messageInfo_JoinRequest.Size(m)
}
func (m *JoinRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JoinRequest proto.InternalMessageInfo

func (m *JoinRequest) GetToSign() []byte {
	if m != nil {
		return m.ToSign
	}
	return nil
}

type JoinResponse struct {
	Sig                  []byte          `protobuf:"bytes,1,opt,name=sig,proto3" json:"sig,omitempty"`
	Player               *PlayerIdentity `protobuf:"bytes,2,opt,name=player,proto3" json:"player,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *JoinResponse) Reset()         { *m = JoinResponse{} }
func (m *JoinResponse) String() string { return proto.CompactTextString(m) }
func (*JoinResponse) ProtoMessage()    {}
func (*JoinResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_d4a92a7eae251313, []int{2}
}
func (m *JoinResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinResponse.Unmarshal(m, b)
}
func (m *JoinResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinResponse.Marshal(b, m, deterministic)
}
func (dst *JoinResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinResponse.Merge(dst, src)
}
func (m *JoinResponse) XXX_Size() int {
	return xxx_messageInfo_JoinResponse.Size(m)
}
func (m *JoinResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinResponse.DiscardUnknown(m)
}

var xxx_messageInfo_JoinResponse proto.InternalMessageInfo

func (m *JoinResponse) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

func (m *JoinResponse) GetPlayer() *PlayerIdentity {
	if m != nil {
		return m.Player
	}
	return nil
}

type GameStartRequest struct {
	// The ID of this new game.
	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The set of players that are participating in this game. Always at least 2.
	Players              []*PlayerIdentity `protobuf:"bytes,3,rep,name=players,proto3" json:"players,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GameStartRequest) Reset()         { *m = GameStartRequest{} }
func (m *GameStartRequest) String() string { return proto.CompactTextString(m) }
func (*GameStartRequest) ProtoMessage()    {}
func (*GameStartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_d4a92a7eae251313, []int{3}
}
func (m *GameStartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameStartRequest.Unmarshal(m, b)
}
func (m *GameStartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameStartRequest.Marshal(b, m, deterministic)
}
func (dst *GameStartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameStartRequest.Merge(dst, src)
}
func (m *GameStartRequest) XXX_Size() int {
	return xxx_messageInfo_GameStartRequest.Size(m)
}
func (m *GameStartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GameStartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GameStartRequest proto.InternalMessageInfo

func (m *GameStartRequest) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *GameStartRequest) GetPlayers() []*PlayerIdentity {
	if m != nil {
		return m.Players
	}
	return nil
}

type GameStartResponse struct {
	Sig                  []byte   `protobuf:"bytes,1,opt,name=sig,proto3" json:"sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameStartResponse) Reset()         { *m = GameStartResponse{} }
func (m *GameStartResponse) String() string { return proto.CompactTextString(m) }
func (*GameStartResponse) ProtoMessage()    {}
func (*GameStartResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_d4a92a7eae251313, []int{4}
}
func (m *GameStartResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameStartResponse.Unmarshal(m, b)
}
func (m *GameStartResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameStartResponse.Marshal(b, m, deterministic)
}
func (dst *GameStartResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameStartResponse.Merge(dst, src)
}
func (m *GameStartResponse) XXX_Size() int {
	return xxx_messageInfo_GameStartResponse.Size(m)
}
func (m *GameStartResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GameStartResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GameStartResponse proto.InternalMessageInfo

func (m *GameStartResponse) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

type GameEndRequest struct {
	PlayerScores          []uint32 `protobuf:"varint,1,rep,packed,name=player_scores,json=playerScores,proto3" json:"player_scores,omitempty"`
	LastHandEndPlayerSigs [][]byte `protobuf:"bytes,2,rep,name=last_hand_end_player_sigs,json=lastHandEndPlayerSigs,proto3" json:"last_hand_end_player_sigs,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *GameEndRequest) Reset()         { *m = GameEndRequest{} }
func (m *GameEndRequest) String() string { return proto.CompactTextString(m) }
func (*GameEndRequest) ProtoMessage()    {}
func (*GameEndRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_d4a92a7eae251313, []int{5}
}
func (m *GameEndRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameEndRequest.Unmarshal(m, b)
}
func (m *GameEndRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameEndRequest.Marshal(b, m, deterministic)
}
func (dst *GameEndRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameEndRequest.Merge(dst, src)
}
func (m *GameEndRequest) XXX_Size() int {
	return xxx_messageInfo_GameEndRequest.Size(m)
}
func (m *GameEndRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GameEndRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GameEndRequest proto.InternalMessageInfo

func (m *GameEndRequest) GetPlayerScores() []uint32 {
	if m != nil {
		return m.PlayerScores
	}
	return nil
}

func (m *GameEndRequest) GetLastHandEndPlayerSigs() [][]byte {
	if m != nil {
		return m.LastHandEndPlayerSigs
	}
	return nil
}

type GameEndResponse struct {
	Sig                  []byte   `protobuf:"bytes,1,opt,name=sig,proto3" json:"sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameEndResponse) Reset()         { *m = GameEndResponse{} }
func (m *GameEndResponse) String() string { return proto.CompactTextString(m) }
func (*GameEndResponse) ProtoMessage()    {}
func (*GameEndResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_d4a92a7eae251313, []int{6}
}
func (m *GameEndResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameEndResponse.Unmarshal(m, b)
}
func (m *GameEndResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameEndResponse.Marshal(b, m, deterministic)
}
func (dst *GameEndResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameEndResponse.Merge(dst, src)
}
func (m *GameEndResponse) XXX_Size() int {
	return xxx_messageInfo_GameEndResponse.Size(m)
}
func (m *GameEndResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GameEndResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GameEndResponse proto.InternalMessageInfo

func (m *GameEndResponse) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

type HandStartRequest struct {
	// The ID of this hand.
	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The prime that will be used for shuffling during this hand.
	SharedCardPrime []byte `protobuf:"bytes,2,opt,name=shared_card_prime,json=sharedCardPrime,proto3" json:"shared_card_prime,omitempty"`
	// The scores of the players at the start of this hand.
	PlayerScores []uint32 `protobuf:"varint,3,rep,packed,name=player_scores,json=playerScores,proto3" json:"player_scores,omitempty"`
	// The index of the dealer for this hand.
	DealerIndex uint32 `protobuf:"varint,4,opt,name=dealer_index,json=dealerIndex,proto3" json:"dealer_index,omitempty"`
	// The signatures of the game start binaries for the players.
	GameStartPlayerSigs   [][]byte `protobuf:"bytes,5,rep,name=game_start_player_sigs,json=gameStartPlayerSigs,proto3" json:"game_start_player_sigs,omitempty"`
	LastHandEndPlayerSigs [][]byte `protobuf:"bytes,6,rep,name=last_hand_end_player_sigs,json=lastHandEndPlayerSigs,proto3" json:"last_hand_end_player_sigs,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *HandStartRequest) Reset()         { *m = HandStartRequest{} }
func (m *HandStartRequest) String() string { return proto.CompactTextString(m) }
func (*HandStartRequest) ProtoMessage()    {}
func (*HandStartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_d4a92a7eae251313, []int{7}
}
func (m *HandStartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandStartRequest.Unmarshal(m, b)
}
func (m *HandStartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandStartRequest.Marshal(b, m, deterministic)
}
func (dst *HandStartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandStartRequest.Merge(dst, src)
}
func (m *HandStartRequest) XXX_Size() int {
	return xxx_messageInfo_HandStartRequest.Size(m)
}
func (m *HandStartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HandStartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HandStartRequest proto.InternalMessageInfo

func (m *HandStartRequest) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *HandStartRequest) GetSharedCardPrime() []byte {
	if m != nil {
		return m.SharedCardPrime
	}
	return nil
}

func (m *HandStartRequest) GetPlayerScores() []uint32 {
	if m != nil {
		return m.PlayerScores
	}
	return nil
}

func (m *HandStartRequest) GetDealerIndex() uint32 {
	if m != nil {
		return m.DealerIndex
	}
	return 0
}

func (m *HandStartRequest) GetGameStartPlayerSigs() [][]byte {
	if m != nil {
		return m.GameStartPlayerSigs
	}
	return nil
}

func (m *HandStartRequest) GetLastHandEndPlayerSigs() [][]byte {
	if m != nil {
		return m.LastHandEndPlayerSigs
	}
	return nil
}

type HandStartResponse struct {
	Sig                  [][]byte `protobuf:"bytes,1,rep,name=sig,proto3" json:"sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HandStartResponse) Reset()         { *m = HandStartResponse{} }
func (m *HandStartResponse) String() string { return proto.CompactTextString(m) }
func (*HandStartResponse) ProtoMessage()    {}
func (*HandStartResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_d4a92a7eae251313, []int{8}
}
func (m *HandStartResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandStartResponse.Unmarshal(m, b)
}
func (m *HandStartResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandStartResponse.Marshal(b, m, deterministic)
}
func (dst *HandStartResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandStartResponse.Merge(dst, src)
}
func (m *HandStartResponse) XXX_Size() int {
	return xxx_messageInfo_HandStartResponse.Size(m)
}
func (m *HandStartResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HandStartResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HandStartResponse proto.InternalMessageInfo

func (m *HandStartResponse) GetSig() [][]byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

type HandEndRequest struct {
	// On stage 0, no sig is expected in the response and no player infos are available
	Stage              uint32   `protobuf:"varint,1,opt,name=stage,proto3" json:"stage,omitempty"`
	WinnerIndex        uint32   `protobuf:"varint,2,opt,name=winner_index,json=winnerIndex,proto3" json:"winner_index,omitempty"`
	Score              uint32   `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
	EncryptedDeckCards [][]byte `protobuf:"bytes,4,rep,name=encrypted_deck_cards,json=encryptedDeckCards,proto3" json:"encrypted_deck_cards,omitempty"`
	// Not present on first stage
	PlayerInfos          []*HandEndRequest_PlayerInfo `protobuf:"bytes,5,rep,name=player_infos,json=playerInfos,proto3" json:"player_infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *HandEndRequest) Reset()         { *m = HandEndRequest{} }
func (m *HandEndRequest) String() string { return proto.CompactTextString(m) }
func (*HandEndRequest) ProtoMessage()    {}
func (*HandEndRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_d4a92a7eae251313, []int{9}
}
func (m *HandEndRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandEndRequest.Unmarshal(m, b)
}
func (m *HandEndRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandEndRequest.Marshal(b, m, deterministic)
}
func (dst *HandEndRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandEndRequest.Merge(dst, src)
}
func (m *HandEndRequest) XXX_Size() int {
	return xxx_messageInfo_HandEndRequest.Size(m)
}
func (m *HandEndRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HandEndRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HandEndRequest proto.InternalMessageInfo

func (m *HandEndRequest) GetStage() uint32 {
	if m != nil {
		return m.Stage
	}
	return 0
}

func (m *HandEndRequest) GetWinnerIndex() uint32 {
	if m != nil {
		return m.WinnerIndex
	}
	return 0
}

func (m *HandEndRequest) GetScore() uint32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *HandEndRequest) GetEncryptedDeckCards() [][]byte {
	if m != nil {
		return m.EncryptedDeckCards
	}
	return nil
}

func (m *HandEndRequest) GetPlayerInfos() []*HandEndRequest_PlayerInfo {
	if m != nil {
		return m.PlayerInfos
	}
	return nil
}

type HandEndRequest_PlayerInfo struct {
	// The set of encrypted cards the player holds.
	EncryptedCardsInHand [][]byte `protobuf:"bytes,1,rep,name=encrypted_cards_in_hand,json=encryptedCardsInHand,proto3" json:"encrypted_cards_in_hand,omitempty"`
	// The set of unencrypted cards the player holds.
	UnencryptedCardsInHand []uint32 `protobuf:"varint,2,rep,packed,name=unencrypted_cards_in_hand,json=unencryptedCardsInHand,proto3" json:"unencrypted_cards_in_hand,omitempty"`
	// The map of all the player's decryption keys for all cards.
	CardDecryptionKeys map[string][]byte `protobuf:"bytes,3,rep,name=card_decryption_keys,json=cardDecryptionKeys,proto3" json:"card_decryption_keys,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The score for this player after the hand.
	Score                uint32   `protobuf:"varint,4,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HandEndRequest_PlayerInfo) Reset()         { *m = HandEndRequest_PlayerInfo{} }
func (m *HandEndRequest_PlayerInfo) String() string { return proto.CompactTextString(m) }
func (*HandEndRequest_PlayerInfo) ProtoMessage()    {}
func (*HandEndRequest_PlayerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_d4a92a7eae251313, []int{9, 0}
}
func (m *HandEndRequest_PlayerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandEndRequest_PlayerInfo.Unmarshal(m, b)
}
func (m *HandEndRequest_PlayerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandEndRequest_PlayerInfo.Marshal(b, m, deterministic)
}
func (dst *HandEndRequest_PlayerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandEndRequest_PlayerInfo.Merge(dst, src)
}
func (m *HandEndRequest_PlayerInfo) XXX_Size() int {
	return xxx_messageInfo_HandEndRequest_PlayerInfo.Size(m)
}
func (m *HandEndRequest_PlayerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_HandEndRequest_PlayerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_HandEndRequest_PlayerInfo proto.InternalMessageInfo

func (m *HandEndRequest_PlayerInfo) GetEncryptedCardsInHand() [][]byte {
	if m != nil {
		return m.EncryptedCardsInHand
	}
	return nil
}

func (m *HandEndRequest_PlayerInfo) GetUnencryptedCardsInHand() []uint32 {
	if m != nil {
		return m.UnencryptedCardsInHand
	}
	return nil
}

func (m *HandEndRequest_PlayerInfo) GetCardDecryptionKeys() map[string][]byte {
	if m != nil {
		return m.CardDecryptionKeys
	}
	return nil
}

func (m *HandEndRequest_PlayerInfo) GetScore() uint32 {
	if m != nil {
		return m.Score
	}
	return 0
}

type HandEndResponse struct {
	// Types that are valid to be assigned to Message:
	//	*HandEndResponse_Sig
	//	*HandEndResponse_Reveal
	Message              isHandEndResponse_Message `protobuf_oneof:"message"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *HandEndResponse) Reset()         { *m = HandEndResponse{} }
func (m *HandEndResponse) String() string { return proto.CompactTextString(m) }
func (*HandEndResponse) ProtoMessage()    {}
func (*HandEndResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_d4a92a7eae251313, []int{10}
}
func (m *HandEndResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandEndResponse.Unmarshal(m, b)
}
func (m *HandEndResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandEndResponse.Marshal(b, m, deterministic)
}
func (dst *HandEndResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandEndResponse.Merge(dst, src)
}
func (m *HandEndResponse) XXX_Size() int {
	return xxx_messageInfo_HandEndResponse.Size(m)
}
func (m *HandEndResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HandEndResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HandEndResponse proto.InternalMessageInfo

type isHandEndResponse_Message interface {
	isHandEndResponse_Message()
}

type HandEndResponse_Sig struct {
	Sig []byte `protobuf:"bytes,1,opt,name=sig,proto3,oneof"`
}
type HandEndResponse_Reveal struct {
	Reveal *HandEndResponse_HandReveal `protobuf:"bytes,2,opt,name=reveal,proto3,oneof"`
}

func (*HandEndResponse_Sig) isHandEndResponse_Message()    {}
func (*HandEndResponse_Reveal) isHandEndResponse_Message() {}

func (m *HandEndResponse) GetMessage() isHandEndResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *HandEndResponse) GetSig() []byte {
	if x, ok := m.GetMessage().(*HandEndResponse_Sig); ok {
		return x.Sig
	}
	return nil
}

func (m *HandEndResponse) GetReveal() *HandEndResponse_HandReveal {
	if x, ok := m.GetMessage().(*HandEndResponse_Reveal); ok {
		return x.Reveal
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*HandEndResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _HandEndResponse_OneofMarshaler, _HandEndResponse_OneofUnmarshaler, _HandEndResponse_OneofSizer, []interface{}{
		(*HandEndResponse_Sig)(nil),
		(*HandEndResponse_Reveal)(nil),
	}
}

func _HandEndResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*HandEndResponse)
	// message
	switch x := m.Message.(type) {
	case *HandEndResponse_Sig:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Sig)
	case *HandEndResponse_Reveal:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reveal); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("HandEndResponse.Message has unexpected type %T", x)
	}
	return nil
}

func _HandEndResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*HandEndResponse)
	switch tag {
	case 1: // message.sig
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Message = &HandEndResponse_Sig{x}
		return true, err
	case 2: // message.reveal
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HandEndResponse_HandReveal)
		err := b.DecodeMessage(msg)
		m.Message = &HandEndResponse_Reveal{msg}
		return true, err
	default:
		return false, nil
	}
}

func _HandEndResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*HandEndResponse)
	// message
	switch x := m.Message.(type) {
	case *HandEndResponse_Sig:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Sig)))
		n += len(x.Sig)
	case *HandEndResponse_Reveal:
		s := proto.Size(x.Reveal)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type HandEndResponse_HandReveal struct {
	// The set of encrypted cards the player holds.
	EncryptedCardsInHand [][]byte `protobuf:"bytes,1,rep,name=encrypted_cards_in_hand,json=encryptedCardsInHand,proto3" json:"encrypted_cards_in_hand,omitempty"`
	// The set of unencrypted cards the player holds.
	UnencryptedCardsInHand []uint32 `protobuf:"varint,2,rep,packed,name=unencrypted_cards_in_hand,json=unencryptedCardsInHand,proto3" json:"unencrypted_cards_in_hand,omitempty"`
	// The map of all the player's decryption keys for all cards.
	CardDecryptionKeys   map[string][]byte `protobuf:"bytes,3,rep,name=card_decryption_keys,json=cardDecryptionKeys,proto3" json:"card_decryption_keys,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *HandEndResponse_HandReveal) Reset()         { *m = HandEndResponse_HandReveal{} }
func (m *HandEndResponse_HandReveal) String() string { return proto.CompactTextString(m) }
func (*HandEndResponse_HandReveal) ProtoMessage()    {}
func (*HandEndResponse_HandReveal) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_d4a92a7eae251313, []int{10, 0}
}
func (m *HandEndResponse_HandReveal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandEndResponse_HandReveal.Unmarshal(m, b)
}
func (m *HandEndResponse_HandReveal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandEndResponse_HandReveal.Marshal(b, m, deterministic)
}
func (dst *HandEndResponse_HandReveal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandEndResponse_HandReveal.Merge(dst, src)
}
func (m *HandEndResponse_HandReveal) XXX_Size() int {
	return xxx_messageInfo_HandEndResponse_HandReveal.Size(m)
}
func (m *HandEndResponse_HandReveal) XXX_DiscardUnknown() {
	xxx_messageInfo_HandEndResponse_HandReveal.DiscardUnknown(m)
}

var xxx_messageInfo_HandEndResponse_HandReveal proto.InternalMessageInfo

func (m *HandEndResponse_HandReveal) GetEncryptedCardsInHand() [][]byte {
	if m != nil {
		return m.EncryptedCardsInHand
	}
	return nil
}

func (m *HandEndResponse_HandReveal) GetUnencryptedCardsInHand() []uint32 {
	if m != nil {
		return m.UnencryptedCardsInHand
	}
	return nil
}

func (m *HandEndResponse_HandReveal) GetCardDecryptionKeys() map[string][]byte {
	if m != nil {
		return m.CardDecryptionKeys
	}
	return nil
}

type ShuffleRequest struct {
	// Stage 0 is the encrypt-same-key-and-shuffle stage. Stage 1 is the decrypt-one-key-reencrypt-diff-keys stage. Stage
	// 2 is just the notify-final-set stage.
	Stage uint32 `protobuf:"varint,1,opt,name=stage,proto3" json:"stage,omitempty"`
	// The set of cards this shuffle started with. Never changed. In order of a standard deck on hand start or the
	// discard pile sans top card on discard rotation.
	UnencryptedStartCards []uint32 `protobuf:"varint,2,rep,packed,name=unencrypted_start_cards,json=unencryptedStartCards,proto3" json:"unencrypted_start_cards,omitempty"`
	// The set of cards to work with. These are encrypted. Stage 0 they are encrypted with one key and shuffled. Stage 1
	// they are unencrypted from the one key and re-encrypted with a per-card key. Completion, they are just stored.
	WorkingCardSet [][]byte `protobuf:"bytes,3,rep,name=working_card_set,json=workingCardSet,proto3" json:"working_card_set,omitempty"`
	// The set of signatures of the HandStart message for each player.
	HandStartPlayerSigs  [][]byte `protobuf:"bytes,4,rep,name=hand_start_player_sigs,json=handStartPlayerSigs,proto3" json:"hand_start_player_sigs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShuffleRequest) Reset()         { *m = ShuffleRequest{} }
func (m *ShuffleRequest) String() string { return proto.CompactTextString(m) }
func (*ShuffleRequest) ProtoMessage()    {}
func (*ShuffleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_d4a92a7eae251313, []int{11}
}
func (m *ShuffleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShuffleRequest.Unmarshal(m, b)
}
func (m *ShuffleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShuffleRequest.Marshal(b, m, deterministic)
}
func (dst *ShuffleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShuffleRequest.Merge(dst, src)
}
func (m *ShuffleRequest) XXX_Size() int {
	return xxx_messageInfo_ShuffleRequest.Size(m)
}
func (m *ShuffleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShuffleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShuffleRequest proto.InternalMessageInfo

func (m *ShuffleRequest) GetStage() uint32 {
	if m != nil {
		return m.Stage
	}
	return 0
}

func (m *ShuffleRequest) GetUnencryptedStartCards() []uint32 {
	if m != nil {
		return m.UnencryptedStartCards
	}
	return nil
}

func (m *ShuffleRequest) GetWorkingCardSet() [][]byte {
	if m != nil {
		return m.WorkingCardSet
	}
	return nil
}

func (m *ShuffleRequest) GetHandStartPlayerSigs() [][]byte {
	if m != nil {
		return m.HandStartPlayerSigs
	}
	return nil
}

type ShuffleResponse struct {
	// Only used on stage 0 and 1.
	WorkingCardSet       [][]byte `protobuf:"bytes,1,rep,name=working_card_set,json=workingCardSet,proto3" json:"working_card_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShuffleResponse) Reset()         { *m = ShuffleResponse{} }
func (m *ShuffleResponse) String() string { return proto.CompactTextString(m) }
func (*ShuffleResponse) ProtoMessage()    {}
func (*ShuffleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_d4a92a7eae251313, []int{12}
}
func (m *ShuffleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShuffleResponse.Unmarshal(m, b)
}
func (m *ShuffleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShuffleResponse.Marshal(b, m, deterministic)
}
func (dst *ShuffleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShuffleResponse.Merge(dst, src)
}
func (m *ShuffleResponse) XXX_Size() int {
	return xxx_messageInfo_ShuffleResponse.Size(m)
}
func (m *ShuffleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ShuffleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ShuffleResponse proto.InternalMessageInfo

func (m *ShuffleResponse) GetWorkingCardSet() [][]byte {
	if m != nil {
		return m.WorkingCardSet
	}
	return nil
}

type ChooseColorSinceFirstCardIsWildRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChooseColorSinceFirstCardIsWildRequest) Reset() {
	*m = ChooseColorSinceFirstCardIsWildRequest{}
}
func (m *ChooseColorSinceFirstCardIsWildRequest) String() string { return proto.CompactTextString(m) }
func (*ChooseColorSinceFirstCardIsWildRequest) ProtoMessage()    {}
func (*ChooseColorSinceFirstCardIsWildRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_d4a92a7eae251313, []int{13}
}
func (m *ChooseColorSinceFirstCardIsWildRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChooseColorSinceFirstCardIsWildRequest.Unmarshal(m, b)
}
func (m *ChooseColorSinceFirstCardIsWildRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChooseColorSinceFirstCardIsWildRequest.Marshal(b, m, deterministic)
}
func (dst *ChooseColorSinceFirstCardIsWildRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChooseColorSinceFirstCardIsWildRequest.Merge(dst, src)
}
func (m *ChooseColorSinceFirstCardIsWildRequest) XXX_Size() int {
	return xxx_messageInfo_ChooseColorSinceFirstCardIsWildRequest.Size(m)
}
func (m *ChooseColorSinceFirstCardIsWildRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChooseColorSinceFirstCardIsWildRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChooseColorSinceFirstCardIsWildRequest proto.InternalMessageInfo

type ChooseColorSinceFirstCardIsWildResponse struct {
	Color                uint32   `protobuf:"varint,1,opt,name=color,proto3" json:"color,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChooseColorSinceFirstCardIsWildResponse) Reset() {
	*m = ChooseColorSinceFirstCardIsWildResponse{}
}
func (m *ChooseColorSinceFirstCardIsWildResponse) String() string { return proto.CompactTextString(m) }
func (*ChooseColorSinceFirstCardIsWildResponse) ProtoMessage()    {}
func (*ChooseColorSinceFirstCardIsWildResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_d4a92a7eae251313, []int{14}
}
func (m *ChooseColorSinceFirstCardIsWildResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChooseColorSinceFirstCardIsWildResponse.Unmarshal(m, b)
}
func (m *ChooseColorSinceFirstCardIsWildResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChooseColorSinceFirstCardIsWildResponse.Marshal(b, m, deterministic)
}
func (dst *ChooseColorSinceFirstCardIsWildResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChooseColorSinceFirstCardIsWildResponse.Merge(dst, src)
}
func (m *ChooseColorSinceFirstCardIsWildResponse) XXX_Size() int {
	return xxx_messageInfo_ChooseColorSinceFirstCardIsWildResponse.Size(m)
}
func (m *ChooseColorSinceFirstCardIsWildResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChooseColorSinceFirstCardIsWildResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChooseColorSinceFirstCardIsWildResponse proto.InternalMessageInfo

func (m *ChooseColorSinceFirstCardIsWildResponse) GetColor() uint32 {
	if m != nil {
		return m.Color
	}
	return 0
}

type GetDeckTopDecryptionKeyRequest struct {
	ForPlayerIndex       uint32   `protobuf:"varint,1,opt,name=for_player_index,json=forPlayerIndex,proto3" json:"for_player_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeckTopDecryptionKeyRequest) Reset()         { *m = GetDeckTopDecryptionKeyRequest{} }
func (m *GetDeckTopDecryptionKeyRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeckTopDecryptionKeyRequest) ProtoMessage()    {}
func (*GetDeckTopDecryptionKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_d4a92a7eae251313, []int{15}
}
func (m *GetDeckTopDecryptionKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeckTopDecryptionKeyRequest.Unmarshal(m, b)
}
func (m *GetDeckTopDecryptionKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeckTopDecryptionKeyRequest.Marshal(b, m, deterministic)
}
func (dst *GetDeckTopDecryptionKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeckTopDecryptionKeyRequest.Merge(dst, src)
}
func (m *GetDeckTopDecryptionKeyRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeckTopDecryptionKeyRequest.Size(m)
}
func (m *GetDeckTopDecryptionKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeckTopDecryptionKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeckTopDecryptionKeyRequest proto.InternalMessageInfo

func (m *GetDeckTopDecryptionKeyRequest) GetForPlayerIndex() uint32 {
	if m != nil {
		return m.ForPlayerIndex
	}
	return 0
}

type GetDeckTopDecryptionKeyResponse struct {
	DecryptionKey        []byte   `protobuf:"bytes,1,opt,name=decryption_key,json=decryptionKey,proto3" json:"decryption_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeckTopDecryptionKeyResponse) Reset()         { *m = GetDeckTopDecryptionKeyResponse{} }
func (m *GetDeckTopDecryptionKeyResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeckTopDecryptionKeyResponse) ProtoMessage()    {}
func (*GetDeckTopDecryptionKeyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_d4a92a7eae251313, []int{16}
}
func (m *GetDeckTopDecryptionKeyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeckTopDecryptionKeyResponse.Unmarshal(m, b)
}
func (m *GetDeckTopDecryptionKeyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeckTopDecryptionKeyResponse.Marshal(b, m, deterministic)
}
func (dst *GetDeckTopDecryptionKeyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeckTopDecryptionKeyResponse.Merge(dst, src)
}
func (m *GetDeckTopDecryptionKeyResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeckTopDecryptionKeyResponse.Size(m)
}
func (m *GetDeckTopDecryptionKeyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeckTopDecryptionKeyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeckTopDecryptionKeyResponse proto.InternalMessageInfo

func (m *GetDeckTopDecryptionKeyResponse) GetDecryptionKey() []byte {
	if m != nil {
		return m.DecryptionKey
	}
	return nil
}

type GiveDeckTopCardRequest struct {
	// Has every key but the player's own
	DecryptionKeys       [][]byte `protobuf:"bytes,1,rep,name=decryption_keys,json=decryptionKeys,proto3" json:"decryption_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GiveDeckTopCardRequest) Reset()         { *m = GiveDeckTopCardRequest{} }
func (m *GiveDeckTopCardRequest) String() string { return proto.CompactTextString(m) }
func (*GiveDeckTopCardRequest) ProtoMessage()    {}
func (*GiveDeckTopCardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_d4a92a7eae251313, []int{17}
}
func (m *GiveDeckTopCardRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GiveDeckTopCardRequest.Unmarshal(m, b)
}
func (m *GiveDeckTopCardRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GiveDeckTopCardRequest.Marshal(b, m, deterministic)
}
func (dst *GiveDeckTopCardRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GiveDeckTopCardRequest.Merge(dst, src)
}
func (m *GiveDeckTopCardRequest) XXX_Size() int {
	return xxx_messageInfo_GiveDeckTopCardRequest.Size(m)
}
func (m *GiveDeckTopCardRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GiveDeckTopCardRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GiveDeckTopCardRequest proto.InternalMessageInfo

func (m *GiveDeckTopCardRequest) GetDecryptionKeys() [][]byte {
	if m != nil {
		return m.DecryptionKeys
	}
	return nil
}

type GiveDeckTopCardResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GiveDeckTopCardResponse) Reset()         { *m = GiveDeckTopCardResponse{} }
func (m *GiveDeckTopCardResponse) String() string { return proto.CompactTextString(m) }
func (*GiveDeckTopCardResponse) ProtoMessage()    {}
func (*GiveDeckTopCardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_d4a92a7eae251313, []int{18}
}
func (m *GiveDeckTopCardResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GiveDeckTopCardResponse.Unmarshal(m, b)
}
func (m *GiveDeckTopCardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GiveDeckTopCardResponse.Marshal(b, m, deterministic)
}
func (dst *GiveDeckTopCardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GiveDeckTopCardResponse.Merge(dst, src)
}
func (m *GiveDeckTopCardResponse) XXX_Size() int {
	return xxx_messageInfo_GiveDeckTopCardResponse.Size(m)
}
func (m *GiveDeckTopCardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GiveDeckTopCardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GiveDeckTopCardResponse proto.InternalMessageInfo

type PlayRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayRequest) Reset()         { *m = PlayRequest{} }
func (m *PlayRequest) String() string { return proto.CompactTextString(m) }
func (*PlayRequest) ProtoMessage()    {}
func (*PlayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_d4a92a7eae251313, []int{19}
}
func (m *PlayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayRequest.Unmarshal(m, b)
}
func (m *PlayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayRequest.Marshal(b, m, deterministic)
}
func (dst *PlayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayRequest.Merge(dst, src)
}
func (m *PlayRequest) XXX_Size() int {
	return xxx_messageInfo_PlayRequest.Size(m)
}
func (m *PlayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlayRequest proto.InternalMessageInfo

type PlayResponse struct {
	// The encrypted card to play or empty for no play
	EncryptedCard []byte `protobuf:"bytes,1,opt,name=encrypted_card,json=encryptedCard,proto3" json:"encrypted_card,omitempty"`
	// The unencrypted card to play
	UnencryptedCard uint32 `protobuf:"varint,2,opt,name=unencrypted_card,json=unencryptedCard,proto3" json:"unencrypted_card,omitempty"`
	// Everyone's card decryption keys, by player index
	CardDecryptionKeys [][]byte `protobuf:"bytes,3,rep,name=card_decryption_keys,json=cardDecryptionKeys,proto3" json:"card_decryption_keys,omitempty"`
	// 0 if card not wild
	WildColor            uint32   `protobuf:"varint,4,opt,name=wild_color,json=wildColor,proto3" json:"wild_color,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayResponse) Reset()         { *m = PlayResponse{} }
func (m *PlayResponse) String() string { return proto.CompactTextString(m) }
func (*PlayResponse) ProtoMessage()    {}
func (*PlayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_d4a92a7eae251313, []int{20}
}
func (m *PlayResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayResponse.Unmarshal(m, b)
}
func (m *PlayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayResponse.Marshal(b, m, deterministic)
}
func (dst *PlayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayResponse.Merge(dst, src)
}
func (m *PlayResponse) XXX_Size() int {
	return xxx_messageInfo_PlayResponse.Size(m)
}
func (m *PlayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PlayResponse proto.InternalMessageInfo

func (m *PlayResponse) GetEncryptedCard() []byte {
	if m != nil {
		return m.EncryptedCard
	}
	return nil
}

func (m *PlayResponse) GetUnencryptedCard() uint32 {
	if m != nil {
		return m.UnencryptedCard
	}
	return 0
}

func (m *PlayResponse) GetCardDecryptionKeys() [][]byte {
	if m != nil {
		return m.CardDecryptionKeys
	}
	return nil
}

func (m *PlayResponse) GetWildColor() uint32 {
	if m != nil {
		return m.WildColor
	}
	return 0
}

type ShouldChallengeWildDrawFourRequest struct {
	PrevColor            uint32   `protobuf:"varint,1,opt,name=prev_color,json=prevColor,proto3" json:"prev_color,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShouldChallengeWildDrawFourRequest) Reset()         { *m = ShouldChallengeWildDrawFourRequest{} }
func (m *ShouldChallengeWildDrawFourRequest) String() string { return proto.CompactTextString(m) }
func (*ShouldChallengeWildDrawFourRequest) ProtoMessage()    {}
func (*ShouldChallengeWildDrawFourRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_d4a92a7eae251313, []int{21}
}
func (m *ShouldChallengeWildDrawFourRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShouldChallengeWildDrawFourRequest.Unmarshal(m, b)
}
func (m *ShouldChallengeWildDrawFourRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShouldChallengeWildDrawFourRequest.Marshal(b, m, deterministic)
}
func (dst *ShouldChallengeWildDrawFourRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShouldChallengeWildDrawFourRequest.Merge(dst, src)
}
func (m *ShouldChallengeWildDrawFourRequest) XXX_Size() int {
	return xxx_messageInfo_ShouldChallengeWildDrawFourRequest.Size(m)
}
func (m *ShouldChallengeWildDrawFourRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShouldChallengeWildDrawFourRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShouldChallengeWildDrawFourRequest proto.InternalMessageInfo

func (m *ShouldChallengeWildDrawFourRequest) GetPrevColor() uint32 {
	if m != nil {
		return m.PrevColor
	}
	return 0
}

type ShouldChallengeWildDrawFourResponse struct {
	Challenge            bool     `protobuf:"varint,1,opt,name=challenge,proto3" json:"challenge,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShouldChallengeWildDrawFourResponse) Reset()         { *m = ShouldChallengeWildDrawFourResponse{} }
func (m *ShouldChallengeWildDrawFourResponse) String() string { return proto.CompactTextString(m) }
func (*ShouldChallengeWildDrawFourResponse) ProtoMessage()    {}
func (*ShouldChallengeWildDrawFourResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_d4a92a7eae251313, []int{22}
}
func (m *ShouldChallengeWildDrawFourResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShouldChallengeWildDrawFourResponse.Unmarshal(m, b)
}
func (m *ShouldChallengeWildDrawFourResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShouldChallengeWildDrawFourResponse.Marshal(b, m, deterministic)
}
func (dst *ShouldChallengeWildDrawFourResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShouldChallengeWildDrawFourResponse.Merge(dst, src)
}
func (m *ShouldChallengeWildDrawFourResponse) XXX_Size() int {
	return xxx_messageInfo_ShouldChallengeWildDrawFourResponse.Size(m)
}
func (m *ShouldChallengeWildDrawFourResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ShouldChallengeWildDrawFourResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ShouldChallengeWildDrawFourResponse proto.InternalMessageInfo

func (m *ShouldChallengeWildDrawFourResponse) GetChallenge() bool {
	if m != nil {
		return m.Challenge
	}
	return false
}

type RevealCardsForChallengeRequest struct {
	PrevColor            uint32   `protobuf:"varint,1,opt,name=prev_color,json=prevColor,proto3" json:"prev_color,omitempty"`
	ChallengerIndex      uint32   `protobuf:"varint,2,opt,name=challenger_index,json=challengerIndex,proto3" json:"challenger_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RevealCardsForChallengeRequest) Reset()         { *m = RevealCardsForChallengeRequest{} }
func (m *RevealCardsForChallengeRequest) String() string { return proto.CompactTextString(m) }
func (*RevealCardsForChallengeRequest) ProtoMessage()    {}
func (*RevealCardsForChallengeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_d4a92a7eae251313, []int{23}
}
func (m *RevealCardsForChallengeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RevealCardsForChallengeRequest.Unmarshal(m, b)
}
func (m *RevealCardsForChallengeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RevealCardsForChallengeRequest.Marshal(b, m, deterministic)
}
func (dst *RevealCardsForChallengeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RevealCardsForChallengeRequest.Merge(dst, src)
}
func (m *RevealCardsForChallengeRequest) XXX_Size() int {
	return xxx_messageInfo_RevealCardsForChallengeRequest.Size(m)
}
func (m *RevealCardsForChallengeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RevealCardsForChallengeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RevealCardsForChallengeRequest proto.InternalMessageInfo

func (m *RevealCardsForChallengeRequest) GetPrevColor() uint32 {
	if m != nil {
		return m.PrevColor
	}
	return 0
}

func (m *RevealCardsForChallengeRequest) GetChallengerIndex() uint32 {
	if m != nil {
		return m.ChallengerIndex
	}
	return 0
}

type RevealCardsForChallengeResponse struct {
	EncryptedCards [][]byte `protobuf:"bytes,1,rep,name=encrypted_cards,json=encryptedCards,proto3" json:"encrypted_cards,omitempty"`
	// Everyone's decryption keys but the challenger's
	CardDecryptionKeys   [][]byte `protobuf:"bytes,2,rep,name=card_decryption_keys,json=cardDecryptionKeys,proto3" json:"card_decryption_keys,omitempty"`
	ChallengeWillSucceed bool     `protobuf:"varint,3,opt,name=challenge_will_succeed,json=challengeWillSucceed,proto3" json:"challenge_will_succeed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RevealCardsForChallengeResponse) Reset()         { *m = RevealCardsForChallengeResponse{} }
func (m *RevealCardsForChallengeResponse) String() string { return proto.CompactTextString(m) }
func (*RevealCardsForChallengeResponse) ProtoMessage()    {}
func (*RevealCardsForChallengeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_d4a92a7eae251313, []int{24}
}
func (m *RevealCardsForChallengeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RevealCardsForChallengeResponse.Unmarshal(m, b)
}
func (m *RevealCardsForChallengeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RevealCardsForChallengeResponse.Marshal(b, m, deterministic)
}
func (dst *RevealCardsForChallengeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RevealCardsForChallengeResponse.Merge(dst, src)
}
func (m *RevealCardsForChallengeResponse) XXX_Size() int {
	return xxx_messageInfo_RevealCardsForChallengeResponse.Size(m)
}
func (m *RevealCardsForChallengeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RevealCardsForChallengeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RevealCardsForChallengeResponse proto.InternalMessageInfo

func (m *RevealCardsForChallengeResponse) GetEncryptedCards() [][]byte {
	if m != nil {
		return m.EncryptedCards
	}
	return nil
}

func (m *RevealCardsForChallengeResponse) GetCardDecryptionKeys() [][]byte {
	if m != nil {
		return m.CardDecryptionKeys
	}
	return nil
}

func (m *RevealCardsForChallengeResponse) GetChallengeWillSucceed() bool {
	if m != nil {
		return m.ChallengeWillSucceed
	}
	return false
}

type RevealedCardsForChallengeRequest struct {
	EncryptedCards [][]byte `protobuf:"bytes,1,rep,name=encrypted_cards,json=encryptedCards,proto3" json:"encrypted_cards,omitempty"`
	// Everyone's decryption keys but the challenger's
	CardDecryptionKeys   [][]byte `protobuf:"bytes,2,rep,name=card_decryption_keys,json=cardDecryptionKeys,proto3" json:"card_decryption_keys,omitempty"`
	ChallengeWillSucceed bool     `protobuf:"varint,3,opt,name=challenge_will_succeed,json=challengeWillSucceed,proto3" json:"challenge_will_succeed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RevealedCardsForChallengeRequest) Reset()         { *m = RevealedCardsForChallengeRequest{} }
func (m *RevealedCardsForChallengeRequest) String() string { return proto.CompactTextString(m) }
func (*RevealedCardsForChallengeRequest) ProtoMessage()    {}
func (*RevealedCardsForChallengeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_d4a92a7eae251313, []int{25}
}
func (m *RevealedCardsForChallengeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RevealedCardsForChallengeRequest.Unmarshal(m, b)
}
func (m *RevealedCardsForChallengeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RevealedCardsForChallengeRequest.Marshal(b, m, deterministic)
}
func (dst *RevealedCardsForChallengeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RevealedCardsForChallengeRequest.Merge(dst, src)
}
func (m *RevealedCardsForChallengeRequest) XXX_Size() int {
	return xxx_messageInfo_RevealedCardsForChallengeRequest.Size(m)
}
func (m *RevealedCardsForChallengeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RevealedCardsForChallengeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RevealedCardsForChallengeRequest proto.InternalMessageInfo

func (m *RevealedCardsForChallengeRequest) GetEncryptedCards() [][]byte {
	if m != nil {
		return m.EncryptedCards
	}
	return nil
}

func (m *RevealedCardsForChallengeRequest) GetCardDecryptionKeys() [][]byte {
	if m != nil {
		return m.CardDecryptionKeys
	}
	return nil
}

func (m *RevealedCardsForChallengeRequest) GetChallengeWillSucceed() bool {
	if m != nil {
		return m.ChallengeWillSucceed
	}
	return false
}

type RevealedCardsForChallengeResponse struct {
	ChallengeSucceeded   bool     `protobuf:"varint,1,opt,name=challenge_succeeded,json=challengeSucceeded,proto3" json:"challenge_succeeded,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RevealedCardsForChallengeResponse) Reset()         { *m = RevealedCardsForChallengeResponse{} }
func (m *RevealedCardsForChallengeResponse) String() string { return proto.CompactTextString(m) }
func (*RevealedCardsForChallengeResponse) ProtoMessage()    {}
func (*RevealedCardsForChallengeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_player_d4a92a7eae251313, []int{26}
}
func (m *RevealedCardsForChallengeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RevealedCardsForChallengeResponse.Unmarshal(m, b)
}
func (m *RevealedCardsForChallengeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RevealedCardsForChallengeResponse.Marshal(b, m, deterministic)
}
func (dst *RevealedCardsForChallengeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RevealedCardsForChallengeResponse.Merge(dst, src)
}
func (m *RevealedCardsForChallengeResponse) XXX_Size() int {
	return xxx_messageInfo_RevealedCardsForChallengeResponse.Size(m)
}
func (m *RevealedCardsForChallengeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RevealedCardsForChallengeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RevealedCardsForChallengeResponse proto.InternalMessageInfo

func (m *RevealedCardsForChallengeResponse) GetChallengeSucceeded() bool {
	if m != nil {
		return m.ChallengeSucceeded
	}
	return false
}

func init() {
	proto.RegisterType((*PlayerIdentity)(nil), "pb.PlayerIdentity")
	proto.RegisterType((*JoinRequest)(nil), "pb.JoinRequest")
	proto.RegisterType((*JoinResponse)(nil), "pb.JoinResponse")
	proto.RegisterType((*GameStartRequest)(nil), "pb.GameStartRequest")
	proto.RegisterType((*GameStartResponse)(nil), "pb.GameStartResponse")
	proto.RegisterType((*GameEndRequest)(nil), "pb.GameEndRequest")
	proto.RegisterType((*GameEndResponse)(nil), "pb.GameEndResponse")
	proto.RegisterType((*HandStartRequest)(nil), "pb.HandStartRequest")
	proto.RegisterType((*HandStartResponse)(nil), "pb.HandStartResponse")
	proto.RegisterType((*HandEndRequest)(nil), "pb.HandEndRequest")
	proto.RegisterType((*HandEndRequest_PlayerInfo)(nil), "pb.HandEndRequest.PlayerInfo")
	proto.RegisterMapType((map[string][]byte)(nil), "pb.HandEndRequest.PlayerInfo.CardDecryptionKeysEntry")
	proto.RegisterType((*HandEndResponse)(nil), "pb.HandEndResponse")
	proto.RegisterType((*HandEndResponse_HandReveal)(nil), "pb.HandEndResponse.HandReveal")
	proto.RegisterMapType((map[string][]byte)(nil), "pb.HandEndResponse.HandReveal.CardDecryptionKeysEntry")
	proto.RegisterType((*ShuffleRequest)(nil), "pb.ShuffleRequest")
	proto.RegisterType((*ShuffleResponse)(nil), "pb.ShuffleResponse")
	proto.RegisterType((*ChooseColorSinceFirstCardIsWildRequest)(nil), "pb.ChooseColorSinceFirstCardIsWildRequest")
	proto.RegisterType((*ChooseColorSinceFirstCardIsWildResponse)(nil), "pb.ChooseColorSinceFirstCardIsWildResponse")
	proto.RegisterType((*GetDeckTopDecryptionKeyRequest)(nil), "pb.GetDeckTopDecryptionKeyRequest")
	proto.RegisterType((*GetDeckTopDecryptionKeyResponse)(nil), "pb.GetDeckTopDecryptionKeyResponse")
	proto.RegisterType((*GiveDeckTopCardRequest)(nil), "pb.GiveDeckTopCardRequest")
	proto.RegisterType((*GiveDeckTopCardResponse)(nil), "pb.GiveDeckTopCardResponse")
	proto.RegisterType((*PlayRequest)(nil), "pb.PlayRequest")
	proto.RegisterType((*PlayResponse)(nil), "pb.PlayResponse")
	proto.RegisterType((*ShouldChallengeWildDrawFourRequest)(nil), "pb.ShouldChallengeWildDrawFourRequest")
	proto.RegisterType((*ShouldChallengeWildDrawFourResponse)(nil), "pb.ShouldChallengeWildDrawFourResponse")
	proto.RegisterType((*RevealCardsForChallengeRequest)(nil), "pb.RevealCardsForChallengeRequest")
	proto.RegisterType((*RevealCardsForChallengeResponse)(nil), "pb.RevealCardsForChallengeResponse")
	proto.RegisterType((*RevealedCardsForChallengeRequest)(nil), "pb.RevealedCardsForChallengeRequest")
	proto.RegisterType((*RevealedCardsForChallengeResponse)(nil), "pb.RevealedCardsForChallengeResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PlayerClient is the client API for Player service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PlayerClient interface {
	Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinResponse, error)
	GameStart(ctx context.Context, in *GameStartRequest, opts ...grpc.CallOption) (*GameStartResponse, error)
	GameEnd(ctx context.Context, in *GameEndRequest, opts ...grpc.CallOption) (*GameEndResponse, error)
	HandStart(ctx context.Context, in *HandStartRequest, opts ...grpc.CallOption) (*HandStartResponse, error)
	HandEnd(ctx context.Context, in *HandEndRequest, opts ...grpc.CallOption) (*HandEndResponse, error)
	Shuffle(ctx context.Context, in *ShuffleRequest, opts ...grpc.CallOption) (*ShuffleResponse, error)
	ChooseColorSinceFirstCardIsWild(ctx context.Context, in *ChooseColorSinceFirstCardIsWildRequest, opts ...grpc.CallOption) (*ChooseColorSinceFirstCardIsWildResponse, error)
	GetDeckTopDecryptionKey(ctx context.Context, in *GetDeckTopDecryptionKeyRequest, opts ...grpc.CallOption) (*GetDeckTopDecryptionKeyResponse, error)
	GiveDeckTopCard(ctx context.Context, in *GiveDeckTopCardRequest, opts ...grpc.CallOption) (*GiveDeckTopCardResponse, error)
	Play(ctx context.Context, in *PlayRequest, opts ...grpc.CallOption) (*PlayResponse, error)
	ShouldChallengeWildDrawFour(ctx context.Context, in *ShouldChallengeWildDrawFourRequest, opts ...grpc.CallOption) (*ShouldChallengeWildDrawFourResponse, error)
	RevealCardsForChallenge(ctx context.Context, in *RevealCardsForChallengeRequest, opts ...grpc.CallOption) (*RevealCardsForChallengeResponse, error)
	RevealedCardsForChallenge(ctx context.Context, in *RevealedCardsForChallengeRequest, opts ...grpc.CallOption) (*RevealedCardsForChallengeResponse, error)
}

type playerClient struct {
	cc *grpc.ClientConn
}

func NewPlayerClient(cc *grpc.ClientConn) PlayerClient {
	return &playerClient{cc}
}

func (c *playerClient) Join(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinResponse, error) {
	out := new(JoinResponse)
	err := c.cc.Invoke(ctx, "/pb.Player/Join", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playerClient) GameStart(ctx context.Context, in *GameStartRequest, opts ...grpc.CallOption) (*GameStartResponse, error) {
	out := new(GameStartResponse)
	err := c.cc.Invoke(ctx, "/pb.Player/GameStart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playerClient) GameEnd(ctx context.Context, in *GameEndRequest, opts ...grpc.CallOption) (*GameEndResponse, error) {
	out := new(GameEndResponse)
	err := c.cc.Invoke(ctx, "/pb.Player/GameEnd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playerClient) HandStart(ctx context.Context, in *HandStartRequest, opts ...grpc.CallOption) (*HandStartResponse, error) {
	out := new(HandStartResponse)
	err := c.cc.Invoke(ctx, "/pb.Player/HandStart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playerClient) HandEnd(ctx context.Context, in *HandEndRequest, opts ...grpc.CallOption) (*HandEndResponse, error) {
	out := new(HandEndResponse)
	err := c.cc.Invoke(ctx, "/pb.Player/HandEnd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playerClient) Shuffle(ctx context.Context, in *ShuffleRequest, opts ...grpc.CallOption) (*ShuffleResponse, error) {
	out := new(ShuffleResponse)
	err := c.cc.Invoke(ctx, "/pb.Player/Shuffle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playerClient) ChooseColorSinceFirstCardIsWild(ctx context.Context, in *ChooseColorSinceFirstCardIsWildRequest, opts ...grpc.CallOption) (*ChooseColorSinceFirstCardIsWildResponse, error) {
	out := new(ChooseColorSinceFirstCardIsWildResponse)
	err := c.cc.Invoke(ctx, "/pb.Player/ChooseColorSinceFirstCardIsWild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playerClient) GetDeckTopDecryptionKey(ctx context.Context, in *GetDeckTopDecryptionKeyRequest, opts ...grpc.CallOption) (*GetDeckTopDecryptionKeyResponse, error) {
	out := new(GetDeckTopDecryptionKeyResponse)
	err := c.cc.Invoke(ctx, "/pb.Player/GetDeckTopDecryptionKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playerClient) GiveDeckTopCard(ctx context.Context, in *GiveDeckTopCardRequest, opts ...grpc.CallOption) (*GiveDeckTopCardResponse, error) {
	out := new(GiveDeckTopCardResponse)
	err := c.cc.Invoke(ctx, "/pb.Player/GiveDeckTopCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playerClient) Play(ctx context.Context, in *PlayRequest, opts ...grpc.CallOption) (*PlayResponse, error) {
	out := new(PlayResponse)
	err := c.cc.Invoke(ctx, "/pb.Player/Play", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playerClient) ShouldChallengeWildDrawFour(ctx context.Context, in *ShouldChallengeWildDrawFourRequest, opts ...grpc.CallOption) (*ShouldChallengeWildDrawFourResponse, error) {
	out := new(ShouldChallengeWildDrawFourResponse)
	err := c.cc.Invoke(ctx, "/pb.Player/ShouldChallengeWildDrawFour", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playerClient) RevealCardsForChallenge(ctx context.Context, in *RevealCardsForChallengeRequest, opts ...grpc.CallOption) (*RevealCardsForChallengeResponse, error) {
	out := new(RevealCardsForChallengeResponse)
	err := c.cc.Invoke(ctx, "/pb.Player/RevealCardsForChallenge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playerClient) RevealedCardsForChallenge(ctx context.Context, in *RevealedCardsForChallengeRequest, opts ...grpc.CallOption) (*RevealedCardsForChallengeResponse, error) {
	out := new(RevealedCardsForChallengeResponse)
	err := c.cc.Invoke(ctx, "/pb.Player/RevealedCardsForChallenge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PlayerServer is the server API for Player service.
type PlayerServer interface {
	Join(context.Context, *JoinRequest) (*JoinResponse, error)
	GameStart(context.Context, *GameStartRequest) (*GameStartResponse, error)
	GameEnd(context.Context, *GameEndRequest) (*GameEndResponse, error)
	HandStart(context.Context, *HandStartRequest) (*HandStartResponse, error)
	HandEnd(context.Context, *HandEndRequest) (*HandEndResponse, error)
	Shuffle(context.Context, *ShuffleRequest) (*ShuffleResponse, error)
	ChooseColorSinceFirstCardIsWild(context.Context, *ChooseColorSinceFirstCardIsWildRequest) (*ChooseColorSinceFirstCardIsWildResponse, error)
	GetDeckTopDecryptionKey(context.Context, *GetDeckTopDecryptionKeyRequest) (*GetDeckTopDecryptionKeyResponse, error)
	GiveDeckTopCard(context.Context, *GiveDeckTopCardRequest) (*GiveDeckTopCardResponse, error)
	Play(context.Context, *PlayRequest) (*PlayResponse, error)
	ShouldChallengeWildDrawFour(context.Context, *ShouldChallengeWildDrawFourRequest) (*ShouldChallengeWildDrawFourResponse, error)
	RevealCardsForChallenge(context.Context, *RevealCardsForChallengeRequest) (*RevealCardsForChallengeResponse, error)
	RevealedCardsForChallenge(context.Context, *RevealedCardsForChallengeRequest) (*RevealedCardsForChallengeResponse, error)
}

func RegisterPlayerServer(s *grpc.Server, srv PlayerServer) {
	s.RegisterService(&_Player_serviceDesc, srv)
}

func _Player_Join_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerServer).Join(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Player/Join",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerServer).Join(ctx, req.(*JoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Player_GameStart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameStartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerServer).GameStart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Player/GameStart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerServer).GameStart(ctx, req.(*GameStartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Player_GameEnd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameEndRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerServer).GameEnd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Player/GameEnd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerServer).GameEnd(ctx, req.(*GameEndRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Player_HandStart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HandStartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerServer).HandStart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Player/HandStart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerServer).HandStart(ctx, req.(*HandStartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Player_HandEnd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HandEndRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerServer).HandEnd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Player/HandEnd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerServer).HandEnd(ctx, req.(*HandEndRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Player_Shuffle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShuffleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerServer).Shuffle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Player/Shuffle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerServer).Shuffle(ctx, req.(*ShuffleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Player_ChooseColorSinceFirstCardIsWild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChooseColorSinceFirstCardIsWildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerServer).ChooseColorSinceFirstCardIsWild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Player/ChooseColorSinceFirstCardIsWild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerServer).ChooseColorSinceFirstCardIsWild(ctx, req.(*ChooseColorSinceFirstCardIsWildRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Player_GetDeckTopDecryptionKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeckTopDecryptionKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerServer).GetDeckTopDecryptionKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Player/GetDeckTopDecryptionKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerServer).GetDeckTopDecryptionKey(ctx, req.(*GetDeckTopDecryptionKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Player_GiveDeckTopCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GiveDeckTopCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerServer).GiveDeckTopCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Player/GiveDeckTopCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerServer).GiveDeckTopCard(ctx, req.(*GiveDeckTopCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Player_Play_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerServer).Play(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Player/Play",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerServer).Play(ctx, req.(*PlayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Player_ShouldChallengeWildDrawFour_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShouldChallengeWildDrawFourRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerServer).ShouldChallengeWildDrawFour(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Player/ShouldChallengeWildDrawFour",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerServer).ShouldChallengeWildDrawFour(ctx, req.(*ShouldChallengeWildDrawFourRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Player_RevealCardsForChallenge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RevealCardsForChallengeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerServer).RevealCardsForChallenge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Player/RevealCardsForChallenge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerServer).RevealCardsForChallenge(ctx, req.(*RevealCardsForChallengeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Player_RevealedCardsForChallenge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RevealedCardsForChallengeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerServer).RevealedCardsForChallenge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Player/RevealedCardsForChallenge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerServer).RevealedCardsForChallenge(ctx, req.(*RevealedCardsForChallengeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Player_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Player",
	HandlerType: (*PlayerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Join",
			Handler:    _Player_Join_Handler,
		},
		{
			MethodName: "GameStart",
			Handler:    _Player_GameStart_Handler,
		},
		{
			MethodName: "GameEnd",
			Handler:    _Player_GameEnd_Handler,
		},
		{
			MethodName: "HandStart",
			Handler:    _Player_HandStart_Handler,
		},
		{
			MethodName: "HandEnd",
			Handler:    _Player_HandEnd_Handler,
		},
		{
			MethodName: "Shuffle",
			Handler:    _Player_Shuffle_Handler,
		},
		{
			MethodName: "ChooseColorSinceFirstCardIsWild",
			Handler:    _Player_ChooseColorSinceFirstCardIsWild_Handler,
		},
		{
			MethodName: "GetDeckTopDecryptionKey",
			Handler:    _Player_GetDeckTopDecryptionKey_Handler,
		},
		{
			MethodName: "GiveDeckTopCard",
			Handler:    _Player_GiveDeckTopCard_Handler,
		},
		{
			MethodName: "Play",
			Handler:    _Player_Play_Handler,
		},
		{
			MethodName: "ShouldChallengeWildDrawFour",
			Handler:    _Player_ShouldChallengeWildDrawFour_Handler,
		},
		{
			MethodName: "RevealCardsForChallenge",
			Handler:    _Player_RevealCardsForChallenge_Handler,
		},
		{
			MethodName: "RevealedCardsForChallenge",
			Handler:    _Player_RevealedCardsForChallenge_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "player.proto",
}

func init() { proto.RegisterFile("player.proto", fileDescriptor_player_d4a92a7eae251313) }

var fileDescriptor_player_d4a92a7eae251313 = []byte{
	// 1335 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0xdd, 0x72, 0xdb, 0xc4,
	0x17, 0xaf, 0x65, 0x37, 0xae, 0x4f, 0x1c, 0xdb, 0xdd, 0xa4, 0x89, 0xa3, 0xfe, 0xdb, 0xa6, 0xca,
	0x3f, 0x8d, 0x5b, 0x98, 0xc0, 0xa4, 0xb4, 0x13, 0xe0, 0x82, 0x8f, 0x34, 0x69, 0x52, 0xb8, 0xe8,
	0xc8, 0x9d, 0xe1, 0x52, 0xa3, 0x48, 0x6b, 0x59, 0x44, 0x59, 0x19, 0xad, 0x9c, 0xd4, 0xdc, 0xf3,
	0x12, 0x0c, 0xef, 0xc0, 0x00, 0xd7, 0xdc, 0xf1, 0x10, 0x3c, 0x0e, 0xb3, 0x5f, 0xfa, 0x8a, 0x25,
	0x97, 0x19, 0x66, 0xe0, 0x4e, 0x7b, 0xf6, 0x7c, 0xed, 0xef, 0x9c, 0xf3, 0xdb, 0xb5, 0xa1, 0x3d,
	0x09, 0xec, 0x19, 0x8e, 0xf6, 0x26, 0x51, 0x18, 0x87, 0x48, 0x9b, 0x9c, 0x19, 0xc7, 0xd0, 0x79,
	0xcd, 0x65, 0xa7, 0x2e, 0x26, 0xb1, 0x1f, 0xcf, 0x50, 0x07, 0x34, 0xdf, 0xed, 0xd7, 0xb6, 0x6a,
	0x83, 0xb6, 0xa9, 0xf9, 0x2e, 0x42, 0xd0, 0x20, 0xf6, 0x05, 0xee, 0x6b, 0x5b, 0xb5, 0x41, 0xcb,
	0xe4, 0xdf, 0xa8, 0x07, 0x75, 0xea, 0x7b, 0xfd, 0x06, 0x57, 0x62, 0x9f, 0xc6, 0x23, 0x58, 0x7e,
	0x15, 0xfa, 0xc4, 0xc4, 0xdf, 0x4d, 0x31, 0x8d, 0xd1, 0x06, 0x34, 0xe3, 0xd0, 0xa2, 0xbe, 0x47,
	0xa4, 0xa7, 0xa5, 0x38, 0x1c, 0xfa, 0x1e, 0x31, 0xbe, 0x86, 0xb6, 0xd0, 0xa3, 0x93, 0x90, 0xd0,
	0xc4, 0x53, 0x2d, 0xf1, 0x84, 0x9e, 0xc0, 0x92, 0xc8, 0x92, 0x47, 0x5c, 0xde, 0x47, 0x7b, 0x93,
	0xb3, 0xbd, 0x7c, 0x8e, 0xa6, 0xd4, 0x30, 0x5e, 0x43, 0xef, 0xa5, 0x7d, 0x81, 0x87, 0xb1, 0x1d,
	0xc5, 0x2a, 0x74, 0x31, 0xff, 0xf7, 0xa1, 0x29, 0xb4, 0x69, 0xbf, 0xbe, 0x55, 0x2f, 0x71, 0xa8,
	0x54, 0x8c, 0x1d, 0xb8, 0x9d, 0xf1, 0x58, 0x96, 0xa4, 0x11, 0x42, 0x87, 0xa9, 0x1d, 0x11, 0x57,
	0x85, 0xdd, 0x86, 0x15, 0xe1, 0xc3, 0xa2, 0x4e, 0x18, 0x61, 0xda, 0xaf, 0x6d, 0xd5, 0x07, 0x2b,
	0xa6, 0x44, 0x7c, 0xc8, 0x65, 0xe8, 0x00, 0x36, 0x03, 0x9b, 0xc6, 0xd6, 0xd8, 0x26, 0xae, 0x85,
	0x89, 0x6b, 0x29, 0x13, 0xdf, 0xa3, 0x7d, 0x6d, 0xab, 0x3e, 0x68, 0x9b, 0x77, 0x98, 0xc2, 0x89,
	0x4d, 0xdc, 0x23, 0xe2, 0x8a, 0x24, 0x87, 0xbe, 0x47, 0x8d, 0x6d, 0xe8, 0x26, 0x01, 0x4b, 0xb3,
	0xfa, 0x41, 0x83, 0x1e, 0x33, 0xad, 0xc4, 0xe3, 0x09, 0xdc, 0xa6, 0x63, 0x3b, 0xc2, 0xae, 0xe5,
	0xd8, 0x91, 0x6b, 0x4d, 0x22, 0x5f, 0x16, 0xb7, 0x6d, 0x76, 0xc5, 0xc6, 0xa1, 0x1d, 0xb9, 0xaf,
	0x99, 0xf8, 0xfa, 0xa1, 0xea, 0x73, 0x0e, 0xf5, 0x10, 0xda, 0x2e, 0xb6, 0x03, 0x1c, 0x59, 0x3e,
	0x71, 0xf1, 0x5b, 0xde, 0x15, 0x2b, 0xe6, 0xb2, 0x90, 0x9d, 0x32, 0x11, 0x7a, 0x0a, 0xeb, 0x9e,
	0x7d, 0x81, 0x2d, 0xca, 0x12, 0xcb, 0x1d, 0xfa, 0x26, 0x3f, 0xf4, 0xaa, 0xa7, 0x30, 0x4f, 0x8f,
	0x5c, 0x0d, 0xd6, 0x52, 0x15, 0x58, 0x3b, 0x70, 0x3b, 0x03, 0x43, 0x11, 0xae, 0xba, 0x82, 0xeb,
	0xc7, 0x06, 0x74, 0xa4, 0xb1, 0x02, 0x6b, 0x0d, 0x6e, 0xd2, 0xd8, 0xf6, 0x30, 0xc7, 0x6b, 0xc5,
	0x14, 0x0b, 0x76, 0xc2, 0x2b, 0x9f, 0x90, 0xe4, 0x84, 0x9a, 0x38, 0xa1, 0x90, 0x89, 0x13, 0x32,
	0x43, 0x06, 0x47, 0xbf, 0x2e, 0x0d, 0xd9, 0x02, 0x7d, 0x08, 0x6b, 0x98, 0x38, 0xd1, 0x6c, 0x12,
	0x63, 0xd7, 0x72, 0xb1, 0x73, 0xce, 0x31, 0xa7, 0xfd, 0x06, 0x4f, 0x02, 0x25, 0x7b, 0x2f, 0xb0,
	0x73, 0xce, 0x50, 0xa7, 0xe8, 0x73, 0x35, 0xa3, 0x96, 0x4f, 0x46, 0xa1, 0xc0, 0x67, 0x79, 0xff,
	0x1e, 0x6b, 0xd9, 0x7c, 0xaa, 0xaa, 0x83, 0xc9, 0x28, 0x34, 0x97, 0x27, 0xc9, 0x37, 0xd5, 0xff,
	0xd0, 0x00, 0xd2, 0x3d, 0xf4, 0x0c, 0x36, 0xd2, 0x14, 0x78, 0x74, 0xcb, 0x27, 0x1c, 0x53, 0x09,
	0x45, 0x9a, 0x21, 0xcf, 0xe0, 0x94, 0xb0, 0x38, 0xe8, 0x63, 0xd8, 0x9c, 0x92, 0x32, 0x43, 0x8d,
	0x77, 0xc1, 0x7a, 0x46, 0x21, 0x6b, 0xea, 0xc1, 0x1a, 0xef, 0x2c, 0x17, 0xf3, 0x4d, 0x3f, 0x24,
	0xd6, 0x39, 0x9e, 0xa9, 0xe9, 0x7b, 0x56, 0x79, 0x94, 0x3d, 0xe6, 0xe8, 0x45, 0x62, 0xf8, 0x15,
	0x9e, 0xd1, 0x23, 0x12, 0x47, 0x33, 0x13, 0x39, 0xd7, 0x36, 0x52, 0xcc, 0x1b, 0x19, 0xcc, 0xf5,
	0x23, 0xd8, 0x28, 0x71, 0xc2, 0x5a, 0xe0, 0x1c, 0xcf, 0x78, 0x6d, 0x5b, 0x26, 0xfb, 0x64, 0x2e,
	0x2e, 0xed, 0x60, 0xaa, 0x06, 0x40, 0x2c, 0x3e, 0xd1, 0x0e, 0x6a, 0xc6, 0x4f, 0x75, 0xe8, 0x26,
	0x69, 0xca, 0x16, 0x42, 0x99, 0x89, 0x3b, 0xb9, 0x21, 0xe8, 0xea, 0x00, 0x96, 0x22, 0x7c, 0x89,
	0xed, 0x40, 0xd2, 0xd5, 0xfd, 0xdc, 0xf9, 0x84, 0x21, 0x5f, 0x9b, 0x5c, 0xeb, 0xe4, 0x86, 0x29,
	0xf5, 0xf5, 0x9f, 0x35, 0x80, 0x74, 0xe3, 0x5f, 0x28, 0xd4, 0xb8, 0xb2, 0x50, 0xcf, 0xab, 0x0f,
	0xf2, 0x77, 0x2a, 0xf5, 0x0f, 0xd5, 0xe4, 0xcb, 0x16, 0x34, 0x2f, 0x30, 0xa5, 0xb6, 0x87, 0x8d,
	0xdf, 0x6b, 0xd0, 0x19, 0x8e, 0xa7, 0xa3, 0x51, 0x80, 0xab, 0x67, 0xf7, 0x39, 0x6c, 0x64, 0xf1,
	0x11, 0x0c, 0x24, 0xa6, 0x50, 0xa0, 0x73, 0x27, 0xb3, 0xcd, 0x19, 0x43, 0x0c, 0xe2, 0x00, 0x7a,
	0x57, 0x61, 0x74, 0xee, 0x13, 0x4f, 0xf0, 0x24, 0xc5, 0x31, 0x07, 0xa6, 0x6d, 0x76, 0xa4, 0x9c,
	0xe9, 0x0d, 0x71, 0xcc, 0xc8, 0x8d, 0x53, 0xd4, 0x75, 0x72, 0x13, 0x63, 0xbe, 0x3a, 0x56, 0x5c,
	0x94, 0xa1, 0xa8, 0x4f, 0xa1, 0x9b, 0xa4, 0x2f, 0xbb, 0x6b, 0x5e, 0xc4, 0xda, 0xbc, 0x88, 0xc6,
	0x00, 0x1e, 0x1d, 0x8e, 0xc3, 0x90, 0xe2, 0xc3, 0x30, 0x08, 0xa3, 0xa1, 0x4f, 0x1c, 0x7c, 0xec,
	0x47, 0x94, 0x67, 0x7e, 0x4a, 0xbf, 0xf1, 0x03, 0x35, 0x59, 0xc6, 0x67, 0xb0, 0xbb, 0x50, 0x53,
	0x86, 0x5f, 0x83, 0x9b, 0x0e, 0x53, 0x52, 0xf0, 0xf1, 0x85, 0xf1, 0x0a, 0xee, 0xbf, 0xc4, 0x31,
	0xe3, 0xa7, 0x37, 0xe1, 0x24, 0x57, 0x3f, 0x05, 0xfb, 0x00, 0x7a, 0xa3, 0x30, 0xb2, 0x12, 0xd6,
	0x62, 0x04, 0x29, 0x5c, 0x74, 0x46, 0x61, 0xa4, 0x46, 0xdb, 0xc5, 0x6f, 0x8d, 0x13, 0x78, 0x50,
	0xea, 0x4b, 0x26, 0xb1, 0x03, 0x9d, 0x7c, 0x37, 0xca, 0x8b, 0x6b, 0xc5, 0xcd, 0xaa, 0x1b, 0x5f,
	0xc0, 0xfa, 0x4b, 0xff, 0x12, 0x4b, 0x57, 0xec, 0x30, 0x2a, 0x9b, 0x5d, 0xe8, 0x16, 0xdb, 0x59,
	0x62, 0x98, 0xf3, 0x40, 0x8d, 0x4d, 0xd8, 0xb8, 0xe6, 0x42, 0x24, 0x61, 0xac, 0xc0, 0x32, 0x4b,
	0x5b, 0x61, 0xf8, 0x4b, 0x0d, 0xda, 0x62, 0x9d, 0x26, 0x99, 0x1f, 0x38, 0x95, 0x64, 0x6e, 0xca,
	0xd0, 0x63, 0xe8, 0x15, 0x27, 0x53, 0xde, 0x1c, 0xdd, 0xc2, 0x40, 0xb2, 0x7b, 0xa2, 0x74, 0x12,
	0xdb, 0x73, 0xb9, 0xef, 0x1e, 0xc0, 0x95, 0x1f, 0xb8, 0x96, 0x28, 0x99, 0x20, 0xc0, 0x16, 0x93,
	0xf0, 0x42, 0x1b, 0x87, 0x60, 0x0c, 0xc7, 0xe1, 0x34, 0x70, 0x0f, 0xc7, 0x76, 0x10, 0x60, 0xe2,
	0x61, 0x56, 0xeb, 0x17, 0x91, 0x7d, 0x75, 0x1c, 0x4e, 0x23, 0x05, 0xd6, 0x3d, 0x80, 0x49, 0x84,
	0x2f, 0xad, 0x6c, 0xdd, 0x5b, 0x4c, 0xa2, 0x9c, 0x6c, 0x57, 0x3a, 0x91, 0x70, 0xfc, 0x0f, 0x5a,
	0x8e, 0x52, 0xe0, 0x4e, 0x6e, 0x99, 0xa9, 0xc0, 0xf8, 0x16, 0xee, 0x0b, 0xc2, 0xe0, 0x63, 0x75,
	0x1c, 0x46, 0x89, 0xb3, 0x77, 0xcb, 0x82, 0xc1, 0x98, 0x78, 0xcb, 0x5f, 0xc0, 0xdd, 0x54, 0x2e,
	0x1a, 0xec, 0xd7, 0x1a, 0x3c, 0x28, 0x0d, 0x26, 0xb3, 0xdd, 0x85, 0x6e, 0x81, 0x2d, 0x55, 0x83,
	0xe4, 0x39, 0xb2, 0xb4, 0x26, 0x5a, 0x69, 0x4d, 0x3e, 0x82, 0xf5, 0x24, 0x23, 0xeb, 0xca, 0x0f,
	0x02, 0x8b, 0x4e, 0x1d, 0x07, 0x63, 0x97, 0x3f, 0x0a, 0x6e, 0x99, 0x6b, 0x4e, 0x06, 0xc7, 0x60,
	0x28, 0xf6, 0x8c, 0xdf, 0x6a, 0xb0, 0x25, 0x92, 0x96, 0x91, 0xe7, 0x61, 0xf4, 0x9f, 0xcb, 0xfa,
	0x0d, 0x3c, 0xac, 0x48, 0x5a, 0x62, 0xfd, 0x01, 0xac, 0xa6, 0xae, 0xa5, 0x57, 0xec, 0xca, 0x1e,
	0x41, 0xc9, 0xd6, 0x50, 0xed, 0xec, 0xff, 0xd9, 0x84, 0x25, 0xc1, 0x18, 0xe8, 0x31, 0x34, 0xd8,
	0x0f, 0x05, 0xd4, 0x65, 0xd7, 0x50, 0xe6, 0xa7, 0x85, 0xde, 0x4b, 0x05, 0x32, 0xcc, 0x01, 0xb4,
	0x92, 0x37, 0x3b, 0x5a, 0x63, 0xdb, 0xc5, 0x1f, 0x05, 0xfa, 0x9d, 0x82, 0x54, 0x5a, 0xee, 0x43,
	0x53, 0xbe, 0xaa, 0x11, 0x52, 0x1a, 0xe9, 0xbb, 0x44, 0x5f, 0xcd, 0xc9, 0xd2, 0x68, 0xc9, 0xe3,
	0x52, 0x44, 0x2b, 0x3e, 0xb9, 0x45, 0xb4, 0xeb, 0x2f, 0xd0, 0x7d, 0x68, 0xca, 0xfb, 0x54, 0x44,
	0xcb, 0xbf, 0x82, 0x44, 0xb4, 0xe2, 0x93, 0x63, 0x1f, 0x9a, 0xf2, 0x9e, 0x10, 0x36, 0xf9, 0x3b,
	0x4f, 0xd8, 0x14, 0x2f, 0x92, 0xef, 0xe1, 0xc1, 0x02, 0xd2, 0x47, 0x4f, 0x98, 0xdd, 0xbb, 0xdd,
	0x21, 0xfa, 0x7b, 0xef, 0xa4, 0x2b, 0x63, 0x9f, 0xc1, 0x46, 0x09, 0xc7, 0x23, 0x83, 0xa3, 0x59,
	0x79, 0x99, 0xe8, 0xdb, 0x95, 0x3a, 0x32, 0xc6, 0x2b, 0xe8, 0x16, 0xa8, 0x1b, 0xe9, 0xdc, 0x6e,
	0xee, 0x95, 0xa0, 0xdf, 0x9d, 0xbb, 0x27, 0x7d, 0x3d, 0x86, 0x06, 0x6b, 0x38, 0xd1, 0x66, 0x19,
	0xd6, 0x17, 0x6d, 0x96, 0xa3, 0x7d, 0x02, 0x77, 0x2b, 0xe8, 0x10, 0x3d, 0x12, 0xa5, 0x58, 0x44,
	0xba, 0xfa, 0xee, 0x42, 0xbd, 0x14, 0xca, 0x12, 0x32, 0x13, 0x50, 0x56, 0xd3, 0xaa, 0x80, 0x72,
	0x11, 0x1b, 0x8e, 0x61, 0xb3, 0x74, 0x8c, 0xd1, 0xff, 0x53, 0x0f, 0xe5, 0xd4, 0xa4, 0xef, 0x2c,
	0xd0, 0x12, 0x91, 0xce, 0x96, 0xf8, 0x7f, 0x0e, 0x4f, 0xff, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x18,
	0x6c, 0x58, 0xb3, 0x83, 0x10, 0x00, 0x00,
}
