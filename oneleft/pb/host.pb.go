// Code generated by protoc-gen-go. DO NOT EDIT.
// source: host.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HostMessage_GameEvent_Type int32

const (
	HostMessage_GameEvent_GAME_START                              HostMessage_GameEvent_Type = 0
	HostMessage_GameEvent_GAME_END                                HostMessage_GameEvent_Type = 1
	HostMessage_GameEvent_HAND_START_SHUFFLED                     HostMessage_GameEvent_Type = 2
	HostMessage_GameEvent_HAND_START_CARD_DEALT                   HostMessage_GameEvent_Type = 3
	HostMessage_GameEvent_HAND_START_TOP_CARD_ADDED_TO_DISCARD    HostMessage_GameEvent_Type = 4
	HostMessage_GameEvent_HAND_RESHUFFLED                         HostMessage_GameEvent_Type = 5
	HostMessage_GameEvent_HAND_PLAYER_SKIPPED                     HostMessage_GameEvent_Type = 6
	HostMessage_GameEvent_HAND_PLAYER_DREW_TWO                    HostMessage_GameEvent_Type = 7
	HostMessage_GameEvent_HAND_PLAY_REVERSED                      HostMessage_GameEvent_Type = 8
	HostMessage_GameEvent_HAND_PLAYER_DREW_ONE                    HostMessage_GameEvent_Type = 9
	HostMessage_GameEvent_HAND_PLAYER_PLAYED_NOTHING              HostMessage_GameEvent_Type = 10
	HostMessage_GameEvent_HAND_PLAYER_DISCARDED                   HostMessage_GameEvent_Type = 11
	HostMessage_GameEvent_HAND_PLAYER_NO_CHALLENGE_DREW_FOUR      HostMessage_GameEvent_Type = 12
	HostMessage_GameEvent_HAND_PLAYER_CHALLENGE_SUCCESS_DREW_FOUR HostMessage_GameEvent_Type = 13
	HostMessage_GameEvent_HAND_PLAYER_CHALLENGE_FAILED_DREW_SIX   HostMessage_GameEvent_Type = 14
	HostMessage_GameEvent_HAND_PLAYER_CALLED_ONE_LEFT             HostMessage_GameEvent_Type = 15
	HostMessage_GameEvent_HAND_PLAYER_ONE_LEFT_PENALTY_DREW_TWO   HostMessage_GameEvent_Type = 16
	HostMessage_GameEvent_HAND_END                                HostMessage_GameEvent_Type = 17
)

var HostMessage_GameEvent_Type_name = map[int32]string{
	0:  "GAME_START",
	1:  "GAME_END",
	2:  "HAND_START_SHUFFLED",
	3:  "HAND_START_CARD_DEALT",
	4:  "HAND_START_TOP_CARD_ADDED_TO_DISCARD",
	5:  "HAND_RESHUFFLED",
	6:  "HAND_PLAYER_SKIPPED",
	7:  "HAND_PLAYER_DREW_TWO",
	8:  "HAND_PLAY_REVERSED",
	9:  "HAND_PLAYER_DREW_ONE",
	10: "HAND_PLAYER_PLAYED_NOTHING",
	11: "HAND_PLAYER_DISCARDED",
	12: "HAND_PLAYER_NO_CHALLENGE_DREW_FOUR",
	13: "HAND_PLAYER_CHALLENGE_SUCCESS_DREW_FOUR",
	14: "HAND_PLAYER_CHALLENGE_FAILED_DREW_SIX",
	15: "HAND_PLAYER_CALLED_ONE_LEFT",
	16: "HAND_PLAYER_ONE_LEFT_PENALTY_DREW_TWO",
	17: "HAND_END",
}
var HostMessage_GameEvent_Type_value = map[string]int32{
	"GAME_START":                              0,
	"GAME_END":                                1,
	"HAND_START_SHUFFLED":                     2,
	"HAND_START_CARD_DEALT":                   3,
	"HAND_START_TOP_CARD_ADDED_TO_DISCARD":    4,
	"HAND_RESHUFFLED":                         5,
	"HAND_PLAYER_SKIPPED":                     6,
	"HAND_PLAYER_DREW_TWO":                    7,
	"HAND_PLAY_REVERSED":                      8,
	"HAND_PLAYER_DREW_ONE":                    9,
	"HAND_PLAYER_PLAYED_NOTHING":              10,
	"HAND_PLAYER_DISCARDED":                   11,
	"HAND_PLAYER_NO_CHALLENGE_DREW_FOUR":      12,
	"HAND_PLAYER_CHALLENGE_SUCCESS_DREW_FOUR": 13,
	"HAND_PLAYER_CHALLENGE_FAILED_DREW_SIX":   14,
	"HAND_PLAYER_CALLED_ONE_LEFT":             15,
	"HAND_PLAYER_ONE_LEFT_PENALTY_DREW_TWO":   16,
	"HAND_END":                                17,
}

func (x HostMessage_GameEvent_Type) String() string {
	return proto.EnumName(HostMessage_GameEvent_Type_name, int32(x))
}
func (HostMessage_GameEvent_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_host_85c993cee449e468, []int{1, 3, 0}
}

type ClientMessage struct {
	// Types that are valid to be assigned to Message:
	//	*ClientMessage_ChatMessage
	//	*ClientMessage_StartJoin
	//	*ClientMessage_PlayerResponse_
	Message              isClientMessage_Message `protobuf_oneof:"message"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ClientMessage) Reset()         { *m = ClientMessage{} }
func (m *ClientMessage) String() string { return proto.CompactTextString(m) }
func (*ClientMessage) ProtoMessage()    {}
func (*ClientMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_host_85c993cee449e468, []int{0}
}
func (m *ClientMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientMessage.Unmarshal(m, b)
}
func (m *ClientMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientMessage.Marshal(b, m, deterministic)
}
func (dst *ClientMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientMessage.Merge(dst, src)
}
func (m *ClientMessage) XXX_Size() int {
	return xxx_messageInfo_ClientMessage.Size(m)
}
func (m *ClientMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ClientMessage proto.InternalMessageInfo

type isClientMessage_Message interface {
	isClientMessage_Message()
}

type ClientMessage_ChatMessage struct {
	ChatMessage *ChatMessage `protobuf:"bytes,1,opt,name=chat_message,json=chatMessage,proto3,oneof"`
}
type ClientMessage_StartJoin struct {
	StartJoin bool `protobuf:"varint,2,opt,name=start_join,json=startJoin,proto3,oneof"`
}
type ClientMessage_PlayerResponse_ struct {
	PlayerResponse *ClientMessage_PlayerResponse `protobuf:"bytes,3,opt,name=player_response,json=playerResponse,proto3,oneof"`
}

func (*ClientMessage_ChatMessage) isClientMessage_Message()     {}
func (*ClientMessage_StartJoin) isClientMessage_Message()       {}
func (*ClientMessage_PlayerResponse_) isClientMessage_Message() {}

func (m *ClientMessage) GetMessage() isClientMessage_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *ClientMessage) GetChatMessage() *ChatMessage {
	if x, ok := m.GetMessage().(*ClientMessage_ChatMessage); ok {
		return x.ChatMessage
	}
	return nil
}

func (m *ClientMessage) GetStartJoin() bool {
	if x, ok := m.GetMessage().(*ClientMessage_StartJoin); ok {
		return x.StartJoin
	}
	return false
}

func (m *ClientMessage) GetPlayerResponse() *ClientMessage_PlayerResponse {
	if x, ok := m.GetMessage().(*ClientMessage_PlayerResponse_); ok {
		return x.PlayerResponse
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ClientMessage) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ClientMessage_OneofMarshaler, _ClientMessage_OneofUnmarshaler, _ClientMessage_OneofSizer, []interface{}{
		(*ClientMessage_ChatMessage)(nil),
		(*ClientMessage_StartJoin)(nil),
		(*ClientMessage_PlayerResponse_)(nil),
	}
}

func _ClientMessage_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ClientMessage)
	// message
	switch x := m.Message.(type) {
	case *ClientMessage_ChatMessage:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChatMessage); err != nil {
			return err
		}
	case *ClientMessage_StartJoin:
		t := uint64(0)
		if x.StartJoin {
			t = 1
		}
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case *ClientMessage_PlayerResponse_:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PlayerResponse); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ClientMessage.Message has unexpected type %T", x)
	}
	return nil
}

func _ClientMessage_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ClientMessage)
	switch tag {
	case 1: // message.chat_message
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ChatMessage)
		err := b.DecodeMessage(msg)
		m.Message = &ClientMessage_ChatMessage{msg}
		return true, err
	case 2: // message.start_join
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Message = &ClientMessage_StartJoin{x != 0}
		return true, err
	case 3: // message.player_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ClientMessage_PlayerResponse)
		err := b.DecodeMessage(msg)
		m.Message = &ClientMessage_PlayerResponse_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ClientMessage_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ClientMessage)
	// message
	switch x := m.Message.(type) {
	case *ClientMessage_ChatMessage:
		s := proto.Size(x.ChatMessage)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ClientMessage_StartJoin:
		n += 1 // tag and wire
		n += 1
	case *ClientMessage_PlayerResponse_:
		s := proto.Size(x.PlayerResponse)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ClientMessage_PlayerResponse struct {
	// Types that are valid to be assigned to Message:
	//	*ClientMessage_PlayerResponse_JoinResponse
	//	*ClientMessage_PlayerResponse_GameStartResponse
	//	*ClientMessage_PlayerResponse_HandStartResponse
	//	*ClientMessage_PlayerResponse_ShuffleResponse
	//	*ClientMessage_PlayerResponse_ChooseColorSinceFirstCardIsWildResponse
	//	*ClientMessage_PlayerResponse_PlayResponse
	//	*ClientMessage_PlayerResponse_ShouldChallengeWildDrawFourResponse
	//	*ClientMessage_PlayerResponse_RevealCardsForChallengeResponse
	//	*ClientMessage_PlayerResponse_RevealedCardsForChallengeResponse
	Message              isClientMessage_PlayerResponse_Message `protobuf_oneof:"message"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *ClientMessage_PlayerResponse) Reset()         { *m = ClientMessage_PlayerResponse{} }
func (m *ClientMessage_PlayerResponse) String() string { return proto.CompactTextString(m) }
func (*ClientMessage_PlayerResponse) ProtoMessage()    {}
func (*ClientMessage_PlayerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_host_85c993cee449e468, []int{0, 0}
}
func (m *ClientMessage_PlayerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientMessage_PlayerResponse.Unmarshal(m, b)
}
func (m *ClientMessage_PlayerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientMessage_PlayerResponse.Marshal(b, m, deterministic)
}
func (dst *ClientMessage_PlayerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientMessage_PlayerResponse.Merge(dst, src)
}
func (m *ClientMessage_PlayerResponse) XXX_Size() int {
	return xxx_messageInfo_ClientMessage_PlayerResponse.Size(m)
}
func (m *ClientMessage_PlayerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientMessage_PlayerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClientMessage_PlayerResponse proto.InternalMessageInfo

type isClientMessage_PlayerResponse_Message interface {
	isClientMessage_PlayerResponse_Message()
}

type ClientMessage_PlayerResponse_JoinResponse struct {
	JoinResponse *JoinResponse `protobuf:"bytes,100,opt,name=join_response,json=joinResponse,proto3,oneof"`
}
type ClientMessage_PlayerResponse_GameStartResponse struct {
	GameStartResponse *GameStartResponse `protobuf:"bytes,101,opt,name=game_start_response,json=gameStartResponse,proto3,oneof"`
}
type ClientMessage_PlayerResponse_HandStartResponse struct {
	HandStartResponse *HandStartResponse `protobuf:"bytes,102,opt,name=hand_start_response,json=handStartResponse,proto3,oneof"`
}
type ClientMessage_PlayerResponse_ShuffleResponse struct {
	ShuffleResponse *ShuffleResponse `protobuf:"bytes,103,opt,name=shuffle_response,json=shuffleResponse,proto3,oneof"`
}
type ClientMessage_PlayerResponse_ChooseColorSinceFirstCardIsWildResponse struct {
	ChooseColorSinceFirstCardIsWildResponse *ChooseColorSinceFirstCardIsWildResponse `protobuf:"bytes,104,opt,name=choose_color_since_first_card_is_wild_response,json=chooseColorSinceFirstCardIsWildResponse,proto3,oneof"`
}
type ClientMessage_PlayerResponse_PlayResponse struct {
	PlayResponse *PlayResponse `protobuf:"bytes,105,opt,name=play_response,json=playResponse,proto3,oneof"`
}
type ClientMessage_PlayerResponse_ShouldChallengeWildDrawFourResponse struct {
	ShouldChallengeWildDrawFourResponse *ShouldChallengeWildDrawFourResponse `protobuf:"bytes,106,opt,name=should_challenge_wild_draw_four_response,json=shouldChallengeWildDrawFourResponse,proto3,oneof"`
}
type ClientMessage_PlayerResponse_RevealCardsForChallengeResponse struct {
	RevealCardsForChallengeResponse *RevealCardsForChallengeResponse `protobuf:"bytes,107,opt,name=reveal_cards_for_challenge_response,json=revealCardsForChallengeResponse,proto3,oneof"`
}
type ClientMessage_PlayerResponse_RevealedCardsForChallengeResponse struct {
	RevealedCardsForChallengeResponse *RevealedCardsForChallengeResponse `protobuf:"bytes,108,opt,name=revealed_cards_for_challenge_response,json=revealedCardsForChallengeResponse,proto3,oneof"`
}

func (*ClientMessage_PlayerResponse_JoinResponse) isClientMessage_PlayerResponse_Message()      {}
func (*ClientMessage_PlayerResponse_GameStartResponse) isClientMessage_PlayerResponse_Message() {}
func (*ClientMessage_PlayerResponse_HandStartResponse) isClientMessage_PlayerResponse_Message() {}
func (*ClientMessage_PlayerResponse_ShuffleResponse) isClientMessage_PlayerResponse_Message()   {}
func (*ClientMessage_PlayerResponse_ChooseColorSinceFirstCardIsWildResponse) isClientMessage_PlayerResponse_Message() {
}
func (*ClientMessage_PlayerResponse_PlayResponse) isClientMessage_PlayerResponse_Message() {}
func (*ClientMessage_PlayerResponse_ShouldChallengeWildDrawFourResponse) isClientMessage_PlayerResponse_Message() {
}
func (*ClientMessage_PlayerResponse_RevealCardsForChallengeResponse) isClientMessage_PlayerResponse_Message() {
}
func (*ClientMessage_PlayerResponse_RevealedCardsForChallengeResponse) isClientMessage_PlayerResponse_Message() {
}

func (m *ClientMessage_PlayerResponse) GetMessage() isClientMessage_PlayerResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *ClientMessage_PlayerResponse) GetJoinResponse() *JoinResponse {
	if x, ok := m.GetMessage().(*ClientMessage_PlayerResponse_JoinResponse); ok {
		return x.JoinResponse
	}
	return nil
}

func (m *ClientMessage_PlayerResponse) GetGameStartResponse() *GameStartResponse {
	if x, ok := m.GetMessage().(*ClientMessage_PlayerResponse_GameStartResponse); ok {
		return x.GameStartResponse
	}
	return nil
}

func (m *ClientMessage_PlayerResponse) GetHandStartResponse() *HandStartResponse {
	if x, ok := m.GetMessage().(*ClientMessage_PlayerResponse_HandStartResponse); ok {
		return x.HandStartResponse
	}
	return nil
}

func (m *ClientMessage_PlayerResponse) GetShuffleResponse() *ShuffleResponse {
	if x, ok := m.GetMessage().(*ClientMessage_PlayerResponse_ShuffleResponse); ok {
		return x.ShuffleResponse
	}
	return nil
}

func (m *ClientMessage_PlayerResponse) GetChooseColorSinceFirstCardIsWildResponse() *ChooseColorSinceFirstCardIsWildResponse {
	if x, ok := m.GetMessage().(*ClientMessage_PlayerResponse_ChooseColorSinceFirstCardIsWildResponse); ok {
		return x.ChooseColorSinceFirstCardIsWildResponse
	}
	return nil
}

func (m *ClientMessage_PlayerResponse) GetPlayResponse() *PlayResponse {
	if x, ok := m.GetMessage().(*ClientMessage_PlayerResponse_PlayResponse); ok {
		return x.PlayResponse
	}
	return nil
}

func (m *ClientMessage_PlayerResponse) GetShouldChallengeWildDrawFourResponse() *ShouldChallengeWildDrawFourResponse {
	if x, ok := m.GetMessage().(*ClientMessage_PlayerResponse_ShouldChallengeWildDrawFourResponse); ok {
		return x.ShouldChallengeWildDrawFourResponse
	}
	return nil
}

func (m *ClientMessage_PlayerResponse) GetRevealCardsForChallengeResponse() *RevealCardsForChallengeResponse {
	if x, ok := m.GetMessage().(*ClientMessage_PlayerResponse_RevealCardsForChallengeResponse); ok {
		return x.RevealCardsForChallengeResponse
	}
	return nil
}

func (m *ClientMessage_PlayerResponse) GetRevealedCardsForChallengeResponse() *RevealedCardsForChallengeResponse {
	if x, ok := m.GetMessage().(*ClientMessage_PlayerResponse_RevealedCardsForChallengeResponse); ok {
		return x.RevealedCardsForChallengeResponse
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ClientMessage_PlayerResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ClientMessage_PlayerResponse_OneofMarshaler, _ClientMessage_PlayerResponse_OneofUnmarshaler, _ClientMessage_PlayerResponse_OneofSizer, []interface{}{
		(*ClientMessage_PlayerResponse_JoinResponse)(nil),
		(*ClientMessage_PlayerResponse_GameStartResponse)(nil),
		(*ClientMessage_PlayerResponse_HandStartResponse)(nil),
		(*ClientMessage_PlayerResponse_ShuffleResponse)(nil),
		(*ClientMessage_PlayerResponse_ChooseColorSinceFirstCardIsWildResponse)(nil),
		(*ClientMessage_PlayerResponse_PlayResponse)(nil),
		(*ClientMessage_PlayerResponse_ShouldChallengeWildDrawFourResponse)(nil),
		(*ClientMessage_PlayerResponse_RevealCardsForChallengeResponse)(nil),
		(*ClientMessage_PlayerResponse_RevealedCardsForChallengeResponse)(nil),
	}
}

func _ClientMessage_PlayerResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ClientMessage_PlayerResponse)
	// message
	switch x := m.Message.(type) {
	case *ClientMessage_PlayerResponse_JoinResponse:
		b.EncodeVarint(100<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.JoinResponse); err != nil {
			return err
		}
	case *ClientMessage_PlayerResponse_GameStartResponse:
		b.EncodeVarint(101<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GameStartResponse); err != nil {
			return err
		}
	case *ClientMessage_PlayerResponse_HandStartResponse:
		b.EncodeVarint(102<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HandStartResponse); err != nil {
			return err
		}
	case *ClientMessage_PlayerResponse_ShuffleResponse:
		b.EncodeVarint(103<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ShuffleResponse); err != nil {
			return err
		}
	case *ClientMessage_PlayerResponse_ChooseColorSinceFirstCardIsWildResponse:
		b.EncodeVarint(104<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChooseColorSinceFirstCardIsWildResponse); err != nil {
			return err
		}
	case *ClientMessage_PlayerResponse_PlayResponse:
		b.EncodeVarint(105<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PlayResponse); err != nil {
			return err
		}
	case *ClientMessage_PlayerResponse_ShouldChallengeWildDrawFourResponse:
		b.EncodeVarint(106<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ShouldChallengeWildDrawFourResponse); err != nil {
			return err
		}
	case *ClientMessage_PlayerResponse_RevealCardsForChallengeResponse:
		b.EncodeVarint(107<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RevealCardsForChallengeResponse); err != nil {
			return err
		}
	case *ClientMessage_PlayerResponse_RevealedCardsForChallengeResponse:
		b.EncodeVarint(108<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RevealedCardsForChallengeResponse); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ClientMessage_PlayerResponse.Message has unexpected type %T", x)
	}
	return nil
}

func _ClientMessage_PlayerResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ClientMessage_PlayerResponse)
	switch tag {
	case 100: // message.join_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(JoinResponse)
		err := b.DecodeMessage(msg)
		m.Message = &ClientMessage_PlayerResponse_JoinResponse{msg}
		return true, err
	case 101: // message.game_start_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GameStartResponse)
		err := b.DecodeMessage(msg)
		m.Message = &ClientMessage_PlayerResponse_GameStartResponse{msg}
		return true, err
	case 102: // message.hand_start_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HandStartResponse)
		err := b.DecodeMessage(msg)
		m.Message = &ClientMessage_PlayerResponse_HandStartResponse{msg}
		return true, err
	case 103: // message.shuffle_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ShuffleResponse)
		err := b.DecodeMessage(msg)
		m.Message = &ClientMessage_PlayerResponse_ShuffleResponse{msg}
		return true, err
	case 104: // message.choose_color_since_first_card_is_wild_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ChooseColorSinceFirstCardIsWildResponse)
		err := b.DecodeMessage(msg)
		m.Message = &ClientMessage_PlayerResponse_ChooseColorSinceFirstCardIsWildResponse{msg}
		return true, err
	case 105: // message.play_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PlayResponse)
		err := b.DecodeMessage(msg)
		m.Message = &ClientMessage_PlayerResponse_PlayResponse{msg}
		return true, err
	case 106: // message.should_challenge_wild_draw_four_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ShouldChallengeWildDrawFourResponse)
		err := b.DecodeMessage(msg)
		m.Message = &ClientMessage_PlayerResponse_ShouldChallengeWildDrawFourResponse{msg}
		return true, err
	case 107: // message.reveal_cards_for_challenge_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RevealCardsForChallengeResponse)
		err := b.DecodeMessage(msg)
		m.Message = &ClientMessage_PlayerResponse_RevealCardsForChallengeResponse{msg}
		return true, err
	case 108: // message.revealed_cards_for_challenge_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RevealedCardsForChallengeResponse)
		err := b.DecodeMessage(msg)
		m.Message = &ClientMessage_PlayerResponse_RevealedCardsForChallengeResponse{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ClientMessage_PlayerResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ClientMessage_PlayerResponse)
	// message
	switch x := m.Message.(type) {
	case *ClientMessage_PlayerResponse_JoinResponse:
		s := proto.Size(x.JoinResponse)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ClientMessage_PlayerResponse_GameStartResponse:
		s := proto.Size(x.GameStartResponse)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ClientMessage_PlayerResponse_HandStartResponse:
		s := proto.Size(x.HandStartResponse)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ClientMessage_PlayerResponse_ShuffleResponse:
		s := proto.Size(x.ShuffleResponse)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ClientMessage_PlayerResponse_ChooseColorSinceFirstCardIsWildResponse:
		s := proto.Size(x.ChooseColorSinceFirstCardIsWildResponse)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ClientMessage_PlayerResponse_PlayResponse:
		s := proto.Size(x.PlayResponse)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ClientMessage_PlayerResponse_ShouldChallengeWildDrawFourResponse:
		s := proto.Size(x.ShouldChallengeWildDrawFourResponse)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ClientMessage_PlayerResponse_RevealCardsForChallengeResponse:
		s := proto.Size(x.RevealCardsForChallengeResponse)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ClientMessage_PlayerResponse_RevealedCardsForChallengeResponse:
		s := proto.Size(x.RevealedCardsForChallengeResponse)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type HostMessage struct {
	// Types that are valid to be assigned to Message:
	//	*HostMessage_PlayersUpdate
	//	*HostMessage_ChatMessageAdded
	//	*HostMessage_PlayerRequest_
	//	*HostMessage_Error_
	Message              isHostMessage_Message `protobuf_oneof:"message"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *HostMessage) Reset()         { *m = HostMessage{} }
func (m *HostMessage) String() string { return proto.CompactTextString(m) }
func (*HostMessage) ProtoMessage()    {}
func (*HostMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_host_85c993cee449e468, []int{1}
}
func (m *HostMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostMessage.Unmarshal(m, b)
}
func (m *HostMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostMessage.Marshal(b, m, deterministic)
}
func (dst *HostMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostMessage.Merge(dst, src)
}
func (m *HostMessage) XXX_Size() int {
	return xxx_messageInfo_HostMessage.Size(m)
}
func (m *HostMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_HostMessage.DiscardUnknown(m)
}

var xxx_messageInfo_HostMessage proto.InternalMessageInfo

type isHostMessage_Message interface {
	isHostMessage_Message()
}

type HostMessage_PlayersUpdate struct {
	PlayersUpdate *HostMessage_Players `protobuf:"bytes,1,opt,name=players_update,json=playersUpdate,proto3,oneof"`
}
type HostMessage_ChatMessageAdded struct {
	ChatMessageAdded *ChatMessage `protobuf:"bytes,2,opt,name=chat_message_added,json=chatMessageAdded,proto3,oneof"`
}
type HostMessage_PlayerRequest_ struct {
	PlayerRequest *HostMessage_PlayerRequest `protobuf:"bytes,3,opt,name=player_request,json=playerRequest,proto3,oneof"`
}
type HostMessage_Error_ struct {
	Error *HostMessage_Error `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*HostMessage_PlayersUpdate) isHostMessage_Message()    {}
func (*HostMessage_ChatMessageAdded) isHostMessage_Message() {}
func (*HostMessage_PlayerRequest_) isHostMessage_Message()   {}
func (*HostMessage_Error_) isHostMessage_Message()           {}

func (m *HostMessage) GetMessage() isHostMessage_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *HostMessage) GetPlayersUpdate() *HostMessage_Players {
	if x, ok := m.GetMessage().(*HostMessage_PlayersUpdate); ok {
		return x.PlayersUpdate
	}
	return nil
}

func (m *HostMessage) GetChatMessageAdded() *ChatMessage {
	if x, ok := m.GetMessage().(*HostMessage_ChatMessageAdded); ok {
		return x.ChatMessageAdded
	}
	return nil
}

func (m *HostMessage) GetPlayerRequest() *HostMessage_PlayerRequest {
	if x, ok := m.GetMessage().(*HostMessage_PlayerRequest_); ok {
		return x.PlayerRequest
	}
	return nil
}

func (m *HostMessage) GetError() *HostMessage_Error {
	if x, ok := m.GetMessage().(*HostMessage_Error_); ok {
		return x.Error
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*HostMessage) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _HostMessage_OneofMarshaler, _HostMessage_OneofUnmarshaler, _HostMessage_OneofSizer, []interface{}{
		(*HostMessage_PlayersUpdate)(nil),
		(*HostMessage_ChatMessageAdded)(nil),
		(*HostMessage_PlayerRequest_)(nil),
		(*HostMessage_Error_)(nil),
	}
}

func _HostMessage_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*HostMessage)
	// message
	switch x := m.Message.(type) {
	case *HostMessage_PlayersUpdate:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PlayersUpdate); err != nil {
			return err
		}
	case *HostMessage_ChatMessageAdded:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChatMessageAdded); err != nil {
			return err
		}
	case *HostMessage_PlayerRequest_:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PlayerRequest); err != nil {
			return err
		}
	case *HostMessage_Error_:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Error); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("HostMessage.Message has unexpected type %T", x)
	}
	return nil
}

func _HostMessage_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*HostMessage)
	switch tag {
	case 1: // message.players_update
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HostMessage_Players)
		err := b.DecodeMessage(msg)
		m.Message = &HostMessage_PlayersUpdate{msg}
		return true, err
	case 2: // message.chat_message_added
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ChatMessage)
		err := b.DecodeMessage(msg)
		m.Message = &HostMessage_ChatMessageAdded{msg}
		return true, err
	case 3: // message.player_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HostMessage_PlayerRequest)
		err := b.DecodeMessage(msg)
		m.Message = &HostMessage_PlayerRequest_{msg}
		return true, err
	case 4: // message.error
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HostMessage_Error)
		err := b.DecodeMessage(msg)
		m.Message = &HostMessage_Error_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _HostMessage_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*HostMessage)
	// message
	switch x := m.Message.(type) {
	case *HostMessage_PlayersUpdate:
		s := proto.Size(x.PlayersUpdate)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *HostMessage_ChatMessageAdded:
		s := proto.Size(x.ChatMessageAdded)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *HostMessage_PlayerRequest_:
		s := proto.Size(x.PlayerRequest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *HostMessage_Error_:
		s := proto.Size(x.Error)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type HostMessage_Players struct {
	Players              []*PlayerIdentity `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *HostMessage_Players) Reset()         { *m = HostMessage_Players{} }
func (m *HostMessage_Players) String() string { return proto.CompactTextString(m) }
func (*HostMessage_Players) ProtoMessage()    {}
func (*HostMessage_Players) Descriptor() ([]byte, []int) {
	return fileDescriptor_host_85c993cee449e468, []int{1, 0}
}
func (m *HostMessage_Players) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostMessage_Players.Unmarshal(m, b)
}
func (m *HostMessage_Players) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostMessage_Players.Marshal(b, m, deterministic)
}
func (dst *HostMessage_Players) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostMessage_Players.Merge(dst, src)
}
func (m *HostMessage_Players) XXX_Size() int {
	return xxx_messageInfo_HostMessage_Players.Size(m)
}
func (m *HostMessage_Players) XXX_DiscardUnknown() {
	xxx_messageInfo_HostMessage_Players.DiscardUnknown(m)
}

var xxx_messageInfo_HostMessage_Players proto.InternalMessageInfo

func (m *HostMessage_Players) GetPlayers() []*PlayerIdentity {
	if m != nil {
		return m.Players
	}
	return nil
}

type HostMessage_PlayerRequest struct {
	// Types that are valid to be assigned to Message:
	//	*HostMessage_PlayerRequest_JoinRequest
	//	*HostMessage_PlayerRequest_GameStartRequest
	//	*HostMessage_PlayerRequest_HandStartRequest
	//	*HostMessage_PlayerRequest_ShuffleRequest
	//	*HostMessage_PlayerRequest_ChooseColorSinceFirstCardIsWildRequest
	//	*HostMessage_PlayerRequest_PlayRequest
	//	*HostMessage_PlayerRequest_ShouldChallengeWildDrawFourRequest
	//	*HostMessage_PlayerRequest_RevealCardsForChallengeRequest
	//	*HostMessage_PlayerRequest_RevealedCardsForChallengeRequest
	Message              isHostMessage_PlayerRequest_Message `protobuf_oneof:"message"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *HostMessage_PlayerRequest) Reset()         { *m = HostMessage_PlayerRequest{} }
func (m *HostMessage_PlayerRequest) String() string { return proto.CompactTextString(m) }
func (*HostMessage_PlayerRequest) ProtoMessage()    {}
func (*HostMessage_PlayerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_host_85c993cee449e468, []int{1, 1}
}
func (m *HostMessage_PlayerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostMessage_PlayerRequest.Unmarshal(m, b)
}
func (m *HostMessage_PlayerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostMessage_PlayerRequest.Marshal(b, m, deterministic)
}
func (dst *HostMessage_PlayerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostMessage_PlayerRequest.Merge(dst, src)
}
func (m *HostMessage_PlayerRequest) XXX_Size() int {
	return xxx_messageInfo_HostMessage_PlayerRequest.Size(m)
}
func (m *HostMessage_PlayerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HostMessage_PlayerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HostMessage_PlayerRequest proto.InternalMessageInfo

type isHostMessage_PlayerRequest_Message interface {
	isHostMessage_PlayerRequest_Message()
}

type HostMessage_PlayerRequest_JoinRequest struct {
	JoinRequest *JoinRequest `protobuf:"bytes,100,opt,name=join_request,json=joinRequest,proto3,oneof"`
}
type HostMessage_PlayerRequest_GameStartRequest struct {
	GameStartRequest *GameStartRequest `protobuf:"bytes,101,opt,name=game_start_request,json=gameStartRequest,proto3,oneof"`
}
type HostMessage_PlayerRequest_HandStartRequest struct {
	HandStartRequest *HandStartRequest `protobuf:"bytes,102,opt,name=hand_start_request,json=handStartRequest,proto3,oneof"`
}
type HostMessage_PlayerRequest_ShuffleRequest struct {
	ShuffleRequest *ShuffleRequest `protobuf:"bytes,103,opt,name=shuffle_request,json=shuffleRequest,proto3,oneof"`
}
type HostMessage_PlayerRequest_ChooseColorSinceFirstCardIsWildRequest struct {
	ChooseColorSinceFirstCardIsWildRequest *ChooseColorSinceFirstCardIsWildRequest `protobuf:"bytes,104,opt,name=choose_color_since_first_card_is_wild_request,json=chooseColorSinceFirstCardIsWildRequest,proto3,oneof"`
}
type HostMessage_PlayerRequest_PlayRequest struct {
	PlayRequest *PlayRequest `protobuf:"bytes,105,opt,name=play_request,json=playRequest,proto3,oneof"`
}
type HostMessage_PlayerRequest_ShouldChallengeWildDrawFourRequest struct {
	ShouldChallengeWildDrawFourRequest *ShouldChallengeWildDrawFourRequest `protobuf:"bytes,106,opt,name=should_challenge_wild_draw_four_request,json=shouldChallengeWildDrawFourRequest,proto3,oneof"`
}
type HostMessage_PlayerRequest_RevealCardsForChallengeRequest struct {
	RevealCardsForChallengeRequest *RevealCardsForChallengeRequest `protobuf:"bytes,107,opt,name=reveal_cards_for_challenge_request,json=revealCardsForChallengeRequest,proto3,oneof"`
}
type HostMessage_PlayerRequest_RevealedCardsForChallengeRequest struct {
	RevealedCardsForChallengeRequest *RevealedCardsForChallengeRequest `protobuf:"bytes,108,opt,name=revealed_cards_for_challenge_request,json=revealedCardsForChallengeRequest,proto3,oneof"`
}

func (*HostMessage_PlayerRequest_JoinRequest) isHostMessage_PlayerRequest_Message()      {}
func (*HostMessage_PlayerRequest_GameStartRequest) isHostMessage_PlayerRequest_Message() {}
func (*HostMessage_PlayerRequest_HandStartRequest) isHostMessage_PlayerRequest_Message() {}
func (*HostMessage_PlayerRequest_ShuffleRequest) isHostMessage_PlayerRequest_Message()   {}
func (*HostMessage_PlayerRequest_ChooseColorSinceFirstCardIsWildRequest) isHostMessage_PlayerRequest_Message() {
}
func (*HostMessage_PlayerRequest_PlayRequest) isHostMessage_PlayerRequest_Message() {}
func (*HostMessage_PlayerRequest_ShouldChallengeWildDrawFourRequest) isHostMessage_PlayerRequest_Message() {
}
func (*HostMessage_PlayerRequest_RevealCardsForChallengeRequest) isHostMessage_PlayerRequest_Message() {
}
func (*HostMessage_PlayerRequest_RevealedCardsForChallengeRequest) isHostMessage_PlayerRequest_Message() {
}

func (m *HostMessage_PlayerRequest) GetMessage() isHostMessage_PlayerRequest_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *HostMessage_PlayerRequest) GetJoinRequest() *JoinRequest {
	if x, ok := m.GetMessage().(*HostMessage_PlayerRequest_JoinRequest); ok {
		return x.JoinRequest
	}
	return nil
}

func (m *HostMessage_PlayerRequest) GetGameStartRequest() *GameStartRequest {
	if x, ok := m.GetMessage().(*HostMessage_PlayerRequest_GameStartRequest); ok {
		return x.GameStartRequest
	}
	return nil
}

func (m *HostMessage_PlayerRequest) GetHandStartRequest() *HandStartRequest {
	if x, ok := m.GetMessage().(*HostMessage_PlayerRequest_HandStartRequest); ok {
		return x.HandStartRequest
	}
	return nil
}

func (m *HostMessage_PlayerRequest) GetShuffleRequest() *ShuffleRequest {
	if x, ok := m.GetMessage().(*HostMessage_PlayerRequest_ShuffleRequest); ok {
		return x.ShuffleRequest
	}
	return nil
}

func (m *HostMessage_PlayerRequest) GetChooseColorSinceFirstCardIsWildRequest() *ChooseColorSinceFirstCardIsWildRequest {
	if x, ok := m.GetMessage().(*HostMessage_PlayerRequest_ChooseColorSinceFirstCardIsWildRequest); ok {
		return x.ChooseColorSinceFirstCardIsWildRequest
	}
	return nil
}

func (m *HostMessage_PlayerRequest) GetPlayRequest() *PlayRequest {
	if x, ok := m.GetMessage().(*HostMessage_PlayerRequest_PlayRequest); ok {
		return x.PlayRequest
	}
	return nil
}

func (m *HostMessage_PlayerRequest) GetShouldChallengeWildDrawFourRequest() *ShouldChallengeWildDrawFourRequest {
	if x, ok := m.GetMessage().(*HostMessage_PlayerRequest_ShouldChallengeWildDrawFourRequest); ok {
		return x.ShouldChallengeWildDrawFourRequest
	}
	return nil
}

func (m *HostMessage_PlayerRequest) GetRevealCardsForChallengeRequest() *RevealCardsForChallengeRequest {
	if x, ok := m.GetMessage().(*HostMessage_PlayerRequest_RevealCardsForChallengeRequest); ok {
		return x.RevealCardsForChallengeRequest
	}
	return nil
}

func (m *HostMessage_PlayerRequest) GetRevealedCardsForChallengeRequest() *RevealedCardsForChallengeRequest {
	if x, ok := m.GetMessage().(*HostMessage_PlayerRequest_RevealedCardsForChallengeRequest); ok {
		return x.RevealedCardsForChallengeRequest
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*HostMessage_PlayerRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _HostMessage_PlayerRequest_OneofMarshaler, _HostMessage_PlayerRequest_OneofUnmarshaler, _HostMessage_PlayerRequest_OneofSizer, []interface{}{
		(*HostMessage_PlayerRequest_JoinRequest)(nil),
		(*HostMessage_PlayerRequest_GameStartRequest)(nil),
		(*HostMessage_PlayerRequest_HandStartRequest)(nil),
		(*HostMessage_PlayerRequest_ShuffleRequest)(nil),
		(*HostMessage_PlayerRequest_ChooseColorSinceFirstCardIsWildRequest)(nil),
		(*HostMessage_PlayerRequest_PlayRequest)(nil),
		(*HostMessage_PlayerRequest_ShouldChallengeWildDrawFourRequest)(nil),
		(*HostMessage_PlayerRequest_RevealCardsForChallengeRequest)(nil),
		(*HostMessage_PlayerRequest_RevealedCardsForChallengeRequest)(nil),
	}
}

func _HostMessage_PlayerRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*HostMessage_PlayerRequest)
	// message
	switch x := m.Message.(type) {
	case *HostMessage_PlayerRequest_JoinRequest:
		b.EncodeVarint(100<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.JoinRequest); err != nil {
			return err
		}
	case *HostMessage_PlayerRequest_GameStartRequest:
		b.EncodeVarint(101<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GameStartRequest); err != nil {
			return err
		}
	case *HostMessage_PlayerRequest_HandStartRequest:
		b.EncodeVarint(102<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HandStartRequest); err != nil {
			return err
		}
	case *HostMessage_PlayerRequest_ShuffleRequest:
		b.EncodeVarint(103<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ShuffleRequest); err != nil {
			return err
		}
	case *HostMessage_PlayerRequest_ChooseColorSinceFirstCardIsWildRequest:
		b.EncodeVarint(104<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChooseColorSinceFirstCardIsWildRequest); err != nil {
			return err
		}
	case *HostMessage_PlayerRequest_PlayRequest:
		b.EncodeVarint(105<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PlayRequest); err != nil {
			return err
		}
	case *HostMessage_PlayerRequest_ShouldChallengeWildDrawFourRequest:
		b.EncodeVarint(106<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ShouldChallengeWildDrawFourRequest); err != nil {
			return err
		}
	case *HostMessage_PlayerRequest_RevealCardsForChallengeRequest:
		b.EncodeVarint(107<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RevealCardsForChallengeRequest); err != nil {
			return err
		}
	case *HostMessage_PlayerRequest_RevealedCardsForChallengeRequest:
		b.EncodeVarint(108<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RevealedCardsForChallengeRequest); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("HostMessage_PlayerRequest.Message has unexpected type %T", x)
	}
	return nil
}

func _HostMessage_PlayerRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*HostMessage_PlayerRequest)
	switch tag {
	case 100: // message.join_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(JoinRequest)
		err := b.DecodeMessage(msg)
		m.Message = &HostMessage_PlayerRequest_JoinRequest{msg}
		return true, err
	case 101: // message.game_start_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GameStartRequest)
		err := b.DecodeMessage(msg)
		m.Message = &HostMessage_PlayerRequest_GameStartRequest{msg}
		return true, err
	case 102: // message.hand_start_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HandStartRequest)
		err := b.DecodeMessage(msg)
		m.Message = &HostMessage_PlayerRequest_HandStartRequest{msg}
		return true, err
	case 103: // message.shuffle_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ShuffleRequest)
		err := b.DecodeMessage(msg)
		m.Message = &HostMessage_PlayerRequest_ShuffleRequest{msg}
		return true, err
	case 104: // message.choose_color_since_first_card_is_wild_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ChooseColorSinceFirstCardIsWildRequest)
		err := b.DecodeMessage(msg)
		m.Message = &HostMessage_PlayerRequest_ChooseColorSinceFirstCardIsWildRequest{msg}
		return true, err
	case 105: // message.play_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PlayRequest)
		err := b.DecodeMessage(msg)
		m.Message = &HostMessage_PlayerRequest_PlayRequest{msg}
		return true, err
	case 106: // message.should_challenge_wild_draw_four_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ShouldChallengeWildDrawFourRequest)
		err := b.DecodeMessage(msg)
		m.Message = &HostMessage_PlayerRequest_ShouldChallengeWildDrawFourRequest{msg}
		return true, err
	case 107: // message.reveal_cards_for_challenge_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RevealCardsForChallengeRequest)
		err := b.DecodeMessage(msg)
		m.Message = &HostMessage_PlayerRequest_RevealCardsForChallengeRequest{msg}
		return true, err
	case 108: // message.revealed_cards_for_challenge_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RevealedCardsForChallengeRequest)
		err := b.DecodeMessage(msg)
		m.Message = &HostMessage_PlayerRequest_RevealedCardsForChallengeRequest{msg}
		return true, err
	default:
		return false, nil
	}
}

func _HostMessage_PlayerRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*HostMessage_PlayerRequest)
	// message
	switch x := m.Message.(type) {
	case *HostMessage_PlayerRequest_JoinRequest:
		s := proto.Size(x.JoinRequest)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *HostMessage_PlayerRequest_GameStartRequest:
		s := proto.Size(x.GameStartRequest)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *HostMessage_PlayerRequest_HandStartRequest:
		s := proto.Size(x.HandStartRequest)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *HostMessage_PlayerRequest_ShuffleRequest:
		s := proto.Size(x.ShuffleRequest)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *HostMessage_PlayerRequest_ChooseColorSinceFirstCardIsWildRequest:
		s := proto.Size(x.ChooseColorSinceFirstCardIsWildRequest)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *HostMessage_PlayerRequest_PlayRequest:
		s := proto.Size(x.PlayRequest)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *HostMessage_PlayerRequest_ShouldChallengeWildDrawFourRequest:
		s := proto.Size(x.ShouldChallengeWildDrawFourRequest)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *HostMessage_PlayerRequest_RevealCardsForChallengeRequest:
		s := proto.Size(x.RevealCardsForChallengeRequest)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *HostMessage_PlayerRequest_RevealedCardsForChallengeRequest:
		s := proto.Size(x.RevealedCardsForChallengeRequest)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type HostMessage_Error struct {
	GameId               []byte   `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	PlayerIndex          int32    `protobuf:"varint,3,opt,name=player_index,json=playerIndex,proto3" json:"player_index,omitempty"`
	TerminatesGame       bool     `protobuf:"varint,4,opt,name=terminates_game,json=terminatesGame,proto3" json:"terminates_game,omitempty"`
	TerminatesStream     bool     `protobuf:"varint,5,opt,name=terminates_stream,json=terminatesStream,proto3" json:"terminates_stream,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HostMessage_Error) Reset()         { *m = HostMessage_Error{} }
func (m *HostMessage_Error) String() string { return proto.CompactTextString(m) }
func (*HostMessage_Error) ProtoMessage()    {}
func (*HostMessage_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_host_85c993cee449e468, []int{1, 2}
}
func (m *HostMessage_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostMessage_Error.Unmarshal(m, b)
}
func (m *HostMessage_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostMessage_Error.Marshal(b, m, deterministic)
}
func (dst *HostMessage_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostMessage_Error.Merge(dst, src)
}
func (m *HostMessage_Error) XXX_Size() int {
	return xxx_messageInfo_HostMessage_Error.Size(m)
}
func (m *HostMessage_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_HostMessage_Error.DiscardUnknown(m)
}

var xxx_messageInfo_HostMessage_Error proto.InternalMessageInfo

func (m *HostMessage_Error) GetGameId() []byte {
	if m != nil {
		return m.GameId
	}
	return nil
}

func (m *HostMessage_Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *HostMessage_Error) GetPlayerIndex() int32 {
	if m != nil {
		return m.PlayerIndex
	}
	return 0
}

func (m *HostMessage_Error) GetTerminatesGame() bool {
	if m != nil {
		return m.TerminatesGame
	}
	return false
}

func (m *HostMessage_Error) GetTerminatesStream() bool {
	if m != nil {
		return m.TerminatesStream
	}
	return false
}

type HostMessage_GameEvent struct {
	GameId               []byte                              `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Type                 HostMessage_GameEvent_Type          `protobuf:"varint,2,opt,name=type,proto3,enum=pb.HostMessage_GameEvent_Type" json:"type,omitempty"`
	PlayerScores         []uint32                            `protobuf:"varint,3,rep,packed,name=player_scores,json=playerScores,proto3" json:"player_scores,omitempty"`
	DealerIndex          uint32                              `protobuf:"varint,4,opt,name=dealer_index,json=dealerIndex,proto3" json:"dealer_index,omitempty"`
	Hand                 *HostMessage_GameEvent_Hand         `protobuf:"bytes,5,opt,name=hand,proto3" json:"hand,omitempty"`
	HandComplete         *HostMessage_GameEvent_HandComplete `protobuf:"bytes,6,opt,name=hand_complete,json=handComplete,proto3" json:"hand_complete,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *HostMessage_GameEvent) Reset()         { *m = HostMessage_GameEvent{} }
func (m *HostMessage_GameEvent) String() string { return proto.CompactTextString(m) }
func (*HostMessage_GameEvent) ProtoMessage()    {}
func (*HostMessage_GameEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_host_85c993cee449e468, []int{1, 3}
}
func (m *HostMessage_GameEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostMessage_GameEvent.Unmarshal(m, b)
}
func (m *HostMessage_GameEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostMessage_GameEvent.Marshal(b, m, deterministic)
}
func (dst *HostMessage_GameEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostMessage_GameEvent.Merge(dst, src)
}
func (m *HostMessage_GameEvent) XXX_Size() int {
	return xxx_messageInfo_HostMessage_GameEvent.Size(m)
}
func (m *HostMessage_GameEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_HostMessage_GameEvent.DiscardUnknown(m)
}

var xxx_messageInfo_HostMessage_GameEvent proto.InternalMessageInfo

func (m *HostMessage_GameEvent) GetGameId() []byte {
	if m != nil {
		return m.GameId
	}
	return nil
}

func (m *HostMessage_GameEvent) GetType() HostMessage_GameEvent_Type {
	if m != nil {
		return m.Type
	}
	return HostMessage_GameEvent_GAME_START
}

func (m *HostMessage_GameEvent) GetPlayerScores() []uint32 {
	if m != nil {
		return m.PlayerScores
	}
	return nil
}

func (m *HostMessage_GameEvent) GetDealerIndex() uint32 {
	if m != nil {
		return m.DealerIndex
	}
	return 0
}

func (m *HostMessage_GameEvent) GetHand() *HostMessage_GameEvent_Hand {
	if m != nil {
		return m.Hand
	}
	return nil
}

func (m *HostMessage_GameEvent) GetHandComplete() *HostMessage_GameEvent_HandComplete {
	if m != nil {
		return m.HandComplete
	}
	return nil
}

type HostMessage_GameEvent_Hand struct {
	HandId               []byte   `protobuf:"bytes,1,opt,name=hand_id,json=handId,proto3" json:"hand_id,omitempty"`
	PlayerIndex          uint32   `protobuf:"varint,2,opt,name=player_index,json=playerIndex,proto3" json:"player_index,omitempty"`
	PlayerCardsRemaining []uint32 `protobuf:"varint,3,rep,packed,name=player_cards_remaining,json=playerCardsRemaining,proto3" json:"player_cards_remaining,omitempty"`
	DeckCardsRemaining   uint32   `protobuf:"varint,4,opt,name=deck_cards_remaining,json=deckCardsRemaining,proto3" json:"deck_cards_remaining,omitempty"`
	DiscardStack         []uint32 `protobuf:"varint,5,rep,packed,name=discard_stack,json=discardStack,proto3" json:"discard_stack,omitempty"`
	LastDiscardWildColor uint32   `protobuf:"varint,6,opt,name=last_discard_wild_color,json=lastDiscardWildColor,proto3" json:"last_discard_wild_color,omitempty"`
	Forward              bool     `protobuf:"varint,7,opt,name=forward,proto3" json:"forward,omitempty"`
	OneLeftTarget        uint32   `protobuf:"varint,8,opt,name=one_left_target,json=oneLeftTarget,proto3" json:"one_left_target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HostMessage_GameEvent_Hand) Reset()         { *m = HostMessage_GameEvent_Hand{} }
func (m *HostMessage_GameEvent_Hand) String() string { return proto.CompactTextString(m) }
func (*HostMessage_GameEvent_Hand) ProtoMessage()    {}
func (*HostMessage_GameEvent_Hand) Descriptor() ([]byte, []int) {
	return fileDescriptor_host_85c993cee449e468, []int{1, 3, 0}
}
func (m *HostMessage_GameEvent_Hand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostMessage_GameEvent_Hand.Unmarshal(m, b)
}
func (m *HostMessage_GameEvent_Hand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostMessage_GameEvent_Hand.Marshal(b, m, deterministic)
}
func (dst *HostMessage_GameEvent_Hand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostMessage_GameEvent_Hand.Merge(dst, src)
}
func (m *HostMessage_GameEvent_Hand) XXX_Size() int {
	return xxx_messageInfo_HostMessage_GameEvent_Hand.Size(m)
}
func (m *HostMessage_GameEvent_Hand) XXX_DiscardUnknown() {
	xxx_messageInfo_HostMessage_GameEvent_Hand.DiscardUnknown(m)
}

var xxx_messageInfo_HostMessage_GameEvent_Hand proto.InternalMessageInfo

func (m *HostMessage_GameEvent_Hand) GetHandId() []byte {
	if m != nil {
		return m.HandId
	}
	return nil
}

func (m *HostMessage_GameEvent_Hand) GetPlayerIndex() uint32 {
	if m != nil {
		return m.PlayerIndex
	}
	return 0
}

func (m *HostMessage_GameEvent_Hand) GetPlayerCardsRemaining() []uint32 {
	if m != nil {
		return m.PlayerCardsRemaining
	}
	return nil
}

func (m *HostMessage_GameEvent_Hand) GetDeckCardsRemaining() uint32 {
	if m != nil {
		return m.DeckCardsRemaining
	}
	return 0
}

func (m *HostMessage_GameEvent_Hand) GetDiscardStack() []uint32 {
	if m != nil {
		return m.DiscardStack
	}
	return nil
}

func (m *HostMessage_GameEvent_Hand) GetLastDiscardWildColor() uint32 {
	if m != nil {
		return m.LastDiscardWildColor
	}
	return 0
}

func (m *HostMessage_GameEvent_Hand) GetForward() bool {
	if m != nil {
		return m.Forward
	}
	return false
}

func (m *HostMessage_GameEvent_Hand) GetOneLeftTarget() uint32 {
	if m != nil {
		return m.OneLeftTarget
	}
	return 0
}

type HostMessage_GameEvent_HandComplete struct {
	WinnerIndex          uint32                                            `protobuf:"varint,1,opt,name=winner_index,json=winnerIndex,proto3" json:"winner_index,omitempty"`
	Score                uint32                                            `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	DeckCards            []uint32                                          `protobuf:"varint,3,rep,packed,name=deck_cards,json=deckCards,proto3" json:"deck_cards,omitempty"`
	PlayerCards          []*HostMessage_GameEvent_HandComplete_PlayerCards `protobuf:"bytes,4,rep,name=player_cards,json=playerCards,proto3" json:"player_cards,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                          `json:"-"`
	XXX_unrecognized     []byte                                            `json:"-"`
	XXX_sizecache        int32                                             `json:"-"`
}

func (m *HostMessage_GameEvent_HandComplete) Reset()         { *m = HostMessage_GameEvent_HandComplete{} }
func (m *HostMessage_GameEvent_HandComplete) String() string { return proto.CompactTextString(m) }
func (*HostMessage_GameEvent_HandComplete) ProtoMessage()    {}
func (*HostMessage_GameEvent_HandComplete) Descriptor() ([]byte, []int) {
	return fileDescriptor_host_85c993cee449e468, []int{1, 3, 1}
}
func (m *HostMessage_GameEvent_HandComplete) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostMessage_GameEvent_HandComplete.Unmarshal(m, b)
}
func (m *HostMessage_GameEvent_HandComplete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostMessage_GameEvent_HandComplete.Marshal(b, m, deterministic)
}
func (dst *HostMessage_GameEvent_HandComplete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostMessage_GameEvent_HandComplete.Merge(dst, src)
}
func (m *HostMessage_GameEvent_HandComplete) XXX_Size() int {
	return xxx_messageInfo_HostMessage_GameEvent_HandComplete.Size(m)
}
func (m *HostMessage_GameEvent_HandComplete) XXX_DiscardUnknown() {
	xxx_messageInfo_HostMessage_GameEvent_HandComplete.DiscardUnknown(m)
}

var xxx_messageInfo_HostMessage_GameEvent_HandComplete proto.InternalMessageInfo

func (m *HostMessage_GameEvent_HandComplete) GetWinnerIndex() uint32 {
	if m != nil {
		return m.WinnerIndex
	}
	return 0
}

func (m *HostMessage_GameEvent_HandComplete) GetScore() uint32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *HostMessage_GameEvent_HandComplete) GetDeckCards() []uint32 {
	if m != nil {
		return m.DeckCards
	}
	return nil
}

func (m *HostMessage_GameEvent_HandComplete) GetPlayerCards() []*HostMessage_GameEvent_HandComplete_PlayerCards {
	if m != nil {
		return m.PlayerCards
	}
	return nil
}

type HostMessage_GameEvent_HandComplete_PlayerCards struct {
	PlayerCards          []uint32 `protobuf:"varint,1,rep,packed,name=player_cards,json=playerCards,proto3" json:"player_cards,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HostMessage_GameEvent_HandComplete_PlayerCards) Reset() {
	*m = HostMessage_GameEvent_HandComplete_PlayerCards{}
}
func (m *HostMessage_GameEvent_HandComplete_PlayerCards) String() string {
	return proto.CompactTextString(m)
}
func (*HostMessage_GameEvent_HandComplete_PlayerCards) ProtoMessage() {}
func (*HostMessage_GameEvent_HandComplete_PlayerCards) Descriptor() ([]byte, []int) {
	return fileDescriptor_host_85c993cee449e468, []int{1, 3, 1, 0}
}
func (m *HostMessage_GameEvent_HandComplete_PlayerCards) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostMessage_GameEvent_HandComplete_PlayerCards.Unmarshal(m, b)
}
func (m *HostMessage_GameEvent_HandComplete_PlayerCards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostMessage_GameEvent_HandComplete_PlayerCards.Marshal(b, m, deterministic)
}
func (dst *HostMessage_GameEvent_HandComplete_PlayerCards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostMessage_GameEvent_HandComplete_PlayerCards.Merge(dst, src)
}
func (m *HostMessage_GameEvent_HandComplete_PlayerCards) XXX_Size() int {
	return xxx_messageInfo_HostMessage_GameEvent_HandComplete_PlayerCards.Size(m)
}
func (m *HostMessage_GameEvent_HandComplete_PlayerCards) XXX_DiscardUnknown() {
	xxx_messageInfo_HostMessage_GameEvent_HandComplete_PlayerCards.DiscardUnknown(m)
}

var xxx_messageInfo_HostMessage_GameEvent_HandComplete_PlayerCards proto.InternalMessageInfo

func (m *HostMessage_GameEvent_HandComplete_PlayerCards) GetPlayerCards() []uint32 {
	if m != nil {
		return m.PlayerCards
	}
	return nil
}

type ChatMessage struct {
	PlayerId             []byte   `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	PlayerName           string   `protobuf:"bytes,2,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	Nonce                int64    `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Contents             string   `protobuf:"bytes,4,opt,name=contents,proto3" json:"contents,omitempty"`
	Sig                  []byte   `protobuf:"bytes,5,opt,name=sig,proto3" json:"sig,omitempty"`
	HostUtcMs            uint64   `protobuf:"varint,6,opt,name=host_utc_ms,json=hostUtcMs,proto3" json:"host_utc_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChatMessage) Reset()         { *m = ChatMessage{} }
func (m *ChatMessage) String() string { return proto.CompactTextString(m) }
func (*ChatMessage) ProtoMessage()    {}
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_host_85c993cee449e468, []int{2}
}
func (m *ChatMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatMessage.Unmarshal(m, b)
}
func (m *ChatMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatMessage.Marshal(b, m, deterministic)
}
func (dst *ChatMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatMessage.Merge(dst, src)
}
func (m *ChatMessage) XXX_Size() int {
	return xxx_messageInfo_ChatMessage.Size(m)
}
func (m *ChatMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ChatMessage proto.InternalMessageInfo

func (m *ChatMessage) GetPlayerId() []byte {
	if m != nil {
		return m.PlayerId
	}
	return nil
}

func (m *ChatMessage) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *ChatMessage) GetNonce() int64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *ChatMessage) GetContents() string {
	if m != nil {
		return m.Contents
	}
	return ""
}

func (m *ChatMessage) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

func (m *ChatMessage) GetHostUtcMs() uint64 {
	if m != nil {
		return m.HostUtcMs
	}
	return 0
}

func init() {
	proto.RegisterType((*ClientMessage)(nil), "pb.ClientMessage")
	proto.RegisterType((*ClientMessage_PlayerResponse)(nil), "pb.ClientMessage.PlayerResponse")
	proto.RegisterType((*HostMessage)(nil), "pb.HostMessage")
	proto.RegisterType((*HostMessage_Players)(nil), "pb.HostMessage.Players")
	proto.RegisterType((*HostMessage_PlayerRequest)(nil), "pb.HostMessage.PlayerRequest")
	proto.RegisterType((*HostMessage_Error)(nil), "pb.HostMessage.Error")
	proto.RegisterType((*HostMessage_GameEvent)(nil), "pb.HostMessage.GameEvent")
	proto.RegisterType((*HostMessage_GameEvent_Hand)(nil), "pb.HostMessage.GameEvent.Hand")
	proto.RegisterType((*HostMessage_GameEvent_HandComplete)(nil), "pb.HostMessage.GameEvent.HandComplete")
	proto.RegisterType((*HostMessage_GameEvent_HandComplete_PlayerCards)(nil), "pb.HostMessage.GameEvent.HandComplete.PlayerCards")
	proto.RegisterType((*ChatMessage)(nil), "pb.ChatMessage")
	proto.RegisterEnum("pb.HostMessage_GameEvent_Type", HostMessage_GameEvent_Type_name, HostMessage_GameEvent_Type_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HostClient is the client API for Host service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HostClient interface {
	Stream(ctx context.Context, opts ...grpc.CallOption) (Host_StreamClient, error)
}

type hostClient struct {
	cc *grpc.ClientConn
}

func NewHostClient(cc *grpc.ClientConn) HostClient {
	return &hostClient{cc}
}

func (c *hostClient) Stream(ctx context.Context, opts ...grpc.CallOption) (Host_StreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Host_serviceDesc.Streams[0], "/pb.Host/Stream", opts...)
	if err != nil {
		return nil, err
	}
	x := &hostStreamClient{stream}
	return x, nil
}

type Host_StreamClient interface {
	Send(*ClientMessage) error
	Recv() (*HostMessage, error)
	grpc.ClientStream
}

type hostStreamClient struct {
	grpc.ClientStream
}

func (x *hostStreamClient) Send(m *ClientMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *hostStreamClient) Recv() (*HostMessage, error) {
	m := new(HostMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// HostServer is the server API for Host service.
type HostServer interface {
	Stream(Host_StreamServer) error
}

func RegisterHostServer(s *grpc.Server, srv HostServer) {
	s.RegisterService(&_Host_serviceDesc, srv)
}

func _Host_Stream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(HostServer).Stream(&hostStreamServer{stream})
}

type Host_StreamServer interface {
	Send(*HostMessage) error
	Recv() (*ClientMessage, error)
	grpc.ServerStream
}

type hostStreamServer struct {
	grpc.ServerStream
}

func (x *hostStreamServer) Send(m *HostMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *hostStreamServer) Recv() (*ClientMessage, error) {
	m := new(ClientMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Host_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Host",
	HandlerType: (*HostServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Stream",
			Handler:       _Host_Stream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "host.proto",
}

func init() { proto.RegisterFile("host.proto", fileDescriptor_host_85c993cee449e468) }

var fileDescriptor_host_85c993cee449e468 = []byte{
	// 1602 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x57, 0xcf, 0x52, 0x1b, 0x47,
	0x13, 0x47, 0x20, 0x81, 0xd4, 0x92, 0xd0, 0x32, 0x60, 0xa3, 0x4f, 0x2e, 0x03, 0x06, 0x1b, 0xf8,
	0x3e, 0x7f, 0xa6, 0x28, 0xe2, 0x94, 0x73, 0x49, 0xc5, 0x8a, 0x76, 0x85, 0x14, 0xcb, 0x82, 0x1a,
	0x89, 0x38, 0x3e, 0x4d, 0xad, 0x77, 0x47, 0xd2, 0x62, 0x69, 0x57, 0xd9, 0x59, 0x4c, 0x38, 0xa4,
	0x2a, 0xf7, 0x54, 0xa5, 0x2a, 0x2f, 0x91, 0x6b, 0x0e, 0x79, 0x82, 0xdc, 0xfc, 0x22, 0x39, 0xa7,
	0x2a, 0x4f, 0x90, 0x9a, 0x99, 0xfd, 0x33, 0x12, 0x18, 0x71, 0x82, 0xee, 0xfe, 0xf5, 0xaf, 0x7b,
	0xba, 0x67, 0x7e, 0x92, 0x00, 0x06, 0x1e, 0x0b, 0x0e, 0xc6, 0xbe, 0x17, 0x78, 0x68, 0x7e, 0xfc,
	0xae, 0x52, 0x18, 0x0f, 0xcd, 0x2b, 0xea, 0x4b, 0xcf, 0xf6, 0x6f, 0x59, 0x28, 0xd6, 0x86, 0x0e,
	0x75, 0x83, 0xd7, 0x94, 0x31, 0xb3, 0x4f, 0xd1, 0x73, 0x28, 0x58, 0x03, 0x33, 0x20, 0x23, 0x69,
	0x97, 0x53, 0x5b, 0xa9, 0xfd, 0xfc, 0x51, 0xe9, 0x60, 0xfc, 0xee, 0xa0, 0x36, 0x30, 0x23, 0x58,
	0x63, 0x0e, 0xe7, 0xad, 0xc4, 0x44, 0x9b, 0x00, 0x2c, 0x30, 0xfd, 0x80, 0x9c, 0x7b, 0x8e, 0x5b,
	0x9e, 0xdf, 0x4a, 0xed, 0x67, 0x1b, 0x73, 0x38, 0x27, 0x7c, 0xdf, 0x78, 0x8e, 0x8b, 0x5e, 0x41,
	0x49, 0x16, 0x26, 0x3e, 0x65, 0x63, 0xcf, 0x65, 0xb4, 0xbc, 0x20, 0x98, 0xb7, 0x04, 0xb3, 0xda,
	0xc2, 0xc1, 0xa9, 0x00, 0xe2, 0x10, 0xd7, 0x98, 0xc3, 0xcb, 0xe3, 0x09, 0x4f, 0xe5, 0xaf, 0x45,
	0x58, 0x9e, 0x04, 0xa1, 0x17, 0x50, 0xe4, 0xa5, 0x13, 0x76, 0x5b, 0xb0, 0x6b, 0x9c, 0x9d, 0x37,
	0xa0, 0xb0, 0x15, 0xce, 0x15, 0x1b, 0x1d, 0xc3, 0x6a, 0xdf, 0x1c, 0x51, 0x22, 0xdb, 0x8f, 0xd3,
	0xa9, 0x48, 0xbf, 0xc7, 0xd3, 0x8f, 0xcd, 0x11, 0xed, 0xf0, 0xa8, 0xc2, 0xb1, 0xd2, 0x9f, 0x76,
	0x72, 0xa2, 0x81, 0xe9, 0xda, 0xd3, 0x44, 0xbd, 0x84, 0xa8, 0x61, 0xba, 0xf6, 0x35, 0xa2, 0xc1,
	0xb4, 0x13, 0xbd, 0x04, 0x8d, 0x0d, 0x2e, 0x7a, 0xbd, 0x21, 0x4d, 0x58, 0xfa, 0x82, 0x65, 0x95,
	0xb3, 0x74, 0x64, 0x4c, 0xe1, 0x28, 0xb1, 0x49, 0x17, 0xfa, 0x25, 0x05, 0x07, 0xd6, 0xc0, 0xf3,
	0x18, 0x25, 0x96, 0x37, 0xf4, 0x7c, 0xc2, 0x1c, 0xd7, 0xa2, 0xa4, 0xe7, 0xf8, 0x2c, 0x20, 0x96,
	0xe9, 0xdb, 0xc4, 0x61, 0xe4, 0xd2, 0x19, 0xda, 0x49, 0x81, 0x81, 0x28, 0xf0, 0x54, 0xae, 0x99,
	0x67, 0xd6, 0x78, 0x62, 0x87, 0xe7, 0xd5, 0x79, 0x5a, 0xcd, 0xf4, 0xed, 0x26, 0x7b, 0xe3, 0x0c,
	0x6d, 0xa5, 0xf0, 0x9e, 0x75, 0x37, 0x28, 0xdf, 0x0e, 0x5f, 0x61, 0x52, 0xce, 0x49, 0xb6, 0xc3,
	0x17, 0xa9, 0x6e, 0x67, 0xac, 0xd8, 0xe8, 0xa7, 0x14, 0xec, 0xb3, 0x81, 0x77, 0x31, 0xb4, 0x89,
	0x35, 0x30, 0x87, 0x43, 0xea, 0xf6, 0xa9, 0xec, 0xdc, 0xf6, 0xcd, 0x4b, 0xd2, 0xf3, 0x2e, 0x94,
	0x0b, 0x75, 0x2e, 0x48, 0xf7, 0xe4, 0x90, 0x78, 0x4e, 0x2d, 0x4a, 0xe1, 0xcd, 0xe8, 0xbe, 0x79,
	0x59, 0xf7, 0x2e, 0xd4, 0x7b, 0xb5, 0xc3, 0x66, 0xc3, 0x10, 0x83, 0x1d, 0x9f, 0x7e, 0xa0, 0xe6,
	0x50, 0x4c, 0x8e, 0x91, 0x9e, 0xe7, 0x2b, 0xbd, 0xc4, 0xc5, 0xdf, 0x8b, 0xe2, 0x3b, 0xbc, 0x38,
	0x16, 0x70, 0x3e, 0x06, 0x56, 0xf7, 0xfc, 0x98, 0x5d, 0x29, 0xbc, 0xe9, 0xdf, 0x0e, 0x41, 0x57,
	0xf0, 0x44, 0x42, 0xa8, 0x7d, 0x7b, 0xd9, 0xa1, 0x28, 0xfb, 0x24, 0x29, 0x4b, 0xed, 0xdb, 0x0a,
	0x3f, 0xf2, 0x67, 0x81, 0xbe, 0xce, 0xc1, 0x52, 0xf8, 0xf6, 0x95, 0x7f, 0xb7, 0xff, 0xbc, 0x07,
	0xf9, 0x86, 0xc7, 0xe2, 0x07, 0xff, 0x12, 0xc2, 0x47, 0xc9, 0xc8, 0xc5, 0xd8, 0x36, 0x83, 0x48,
	0x28, 0xd6, 0xc5, 0x45, 0x4f, 0x80, 0xe1, 0x63, 0x66, 0x8d, 0x39, 0x5c, 0x0c, 0x13, 0xce, 0x04,
	0x1e, 0x7d, 0x05, 0x48, 0x15, 0x1a, 0x62, 0xda, 0x36, 0xb5, 0x85, 0x74, 0xdc, 0x28, 0x37, 0x9a,
	0x22, 0x37, 0x55, 0x0e, 0x45, 0xf5, 0xa8, 0x05, 0xe2, 0xd3, 0xef, 0x2f, 0x28, 0x0b, 0x42, 0x45,
	0x79, 0x78, 0x73, 0x0b, 0x58, 0x82, 0x92, 0x46, 0x42, 0x07, 0x7a, 0x06, 0x19, 0xea, 0xfb, 0x9e,
	0x5f, 0x4e, 0x2b, 0x4f, 0x55, 0x49, 0x37, 0x78, 0xb0, 0x31, 0x87, 0x25, 0xaa, 0xf2, 0x02, 0x96,
	0xc2, 0x33, 0xa1, 0xff, 0xc3, 0x52, 0x78, 0xa6, 0x72, 0x6a, 0x6b, 0x61, 0x3f, 0x7f, 0x84, 0xa2,
	0x0b, 0x4d, 0xfd, 0xa6, 0x4d, 0xdd, 0xc0, 0x09, 0xae, 0x70, 0x04, 0xa9, 0x7c, 0x5c, 0x84, 0xe2,
	0x44, 0x2b, 0x5c, 0x6b, 0x43, 0xd1, 0x92, 0xfd, 0xdb, 0xc9, 0xe1, 0xa5, 0x66, 0x45, 0x1d, 0xe7,
	0xcf, 0x13, 0x13, 0xe9, 0x80, 0x26, 0x14, 0x4b, 0xe6, 0x4a, 0xc1, 0x5a, 0x9b, 0x12, 0xac, 0x88,
	0x40, 0xeb, 0x4f, 0xf9, 0x38, 0xcb, 0x84, 0x5c, 0x49, 0x96, 0x5e, 0xc2, 0xa2, 0xa8, 0x55, 0xcc,
	0x32, 0x98, 0xf2, 0xa1, 0x2f, 0xa1, 0x94, 0x68, 0x95, 0xa4, 0x90, 0x52, 0x85, 0x26, 0xa4, 0x2a,
	0x22, 0x58, 0x66, 0x13, 0x1e, 0xf4, 0x73, 0x0a, 0x9e, 0xdd, 0x55, 0xa8, 0x24, 0xbb, 0xd4, 0xa9,
	0xff, 0xdd, 0x49, 0xa7, 0xa2, 0xaa, 0xbb, 0xd6, 0x9d, 0x90, 0x7c, 0x1d, 0xa1, 0x4a, 0xc9, 0x5a,
	0x4e, 0xb2, 0x0e, 0x29, 0x52, 0xf1, 0x3a, 0xc6, 0x89, 0x89, 0x7e, 0x84, 0xbd, 0xd9, 0x0a, 0x25,
	0x09, 0xa5, 0x40, 0xed, 0xce, 0x14, 0xa8, 0xa8, 0xce, 0x36, 0x9b, 0x89, 0x42, 0x63, 0xd8, 0xbe,
	0x55, 0x9e, 0x64, 0x65, 0xa9, 0x4e, 0xdb, 0xb7, 0xaa, 0x53, 0x54, 0x75, 0xc3, 0xbf, 0x15, 0x81,
	0x3e, 0xc0, 0xe3, 0x19, 0xda, 0x24, 0x6b, 0x4a, 0x69, 0x7a, 0x3c, 0x43, 0x9a, 0xa2, 0xaa, 0x5b,
	0xfe, 0x0c, 0x8c, 0xa2, 0x46, 0x95, 0x3f, 0x52, 0x90, 0x11, 0xcf, 0x12, 0xad, 0xc3, 0x92, 0x78,
	0x0c, 0x8e, 0x2d, 0x04, 0xa8, 0x80, 0x17, 0xb9, 0xd9, 0xb4, 0x51, 0x39, 0x46, 0x0b, 0x4d, 0xc9,
	0xe1, 0xc8, 0x44, 0x8f, 0x20, 0xfc, 0x0e, 0x44, 0x1c, 0xd7, 0xa6, 0x3f, 0x08, 0xd5, 0xc8, 0xc8,
	0x9d, 0x52, 0xbf, 0xc9, 0x5d, 0x68, 0x0f, 0x4a, 0x01, 0xf5, 0x47, 0x8e, 0x6b, 0x06, 0x94, 0x11,
	0xce, 0x28, 0xc4, 0x21, 0x8b, 0x97, 0x13, 0x37, 0x7f, 0x65, 0xe8, 0x29, 0xac, 0x28, 0x40, 0x16,
	0xf8, 0xd4, 0x1c, 0x95, 0x33, 0x02, 0xaa, 0x25, 0x81, 0x8e, 0xf0, 0x57, 0xfe, 0x01, 0xc8, 0xf1,
	0x2c, 0xe3, 0x03, 0x75, 0x83, 0x4f, 0x77, 0x7e, 0x04, 0xe9, 0xe0, 0x6a, 0x2c, 0xdb, 0x5e, 0x3e,
	0xda, 0x98, 0x96, 0xa3, 0x98, 0xe1, 0xa0, 0x7b, 0x35, 0xa6, 0x58, 0x60, 0xd1, 0x0e, 0x84, 0xa2,
	0x46, 0x98, 0xe5, 0xf9, 0x94, 0x95, 0x17, 0xb6, 0x16, 0xf6, 0x8b, 0x38, 0x3c, 0x68, 0x47, 0xf8,
	0xf8, 0xc1, 0x6d, 0x3e, 0xe2, 0xe8, 0xe0, 0xfc, 0x48, 0x45, 0x9c, 0x97, 0x3e, 0x79, 0xf0, 0x23,
	0x48, 0xf3, 0x37, 0x2e, 0x8e, 0x90, 0xbf, 0xad, 0x36, 0x57, 0x07, 0x2c, 0xb0, 0xe8, 0x15, 0x14,
	0x85, 0x92, 0x58, 0xde, 0x68, 0x3c, 0xa4, 0x01, 0x2d, 0x2f, 0x26, 0xd7, 0xfc, 0xd3, 0xc9, 0xb5,
	0x10, 0x8d, 0x0b, 0x03, 0xc5, 0xaa, 0x7c, 0x9c, 0x87, 0x34, 0x0f, 0xf3, 0xf1, 0x08, 0xd6, 0x64,
	0x3c, 0xdc, 0x6c, 0xda, 0xd7, 0xd6, 0x37, 0x2f, 0x4f, 0xa1, 0xae, 0xef, 0x39, 0xdc, 0x0f, 0x21,
	0xf2, 0x7e, 0xfa, 0x74, 0x64, 0x3a, 0xae, 0xe3, 0xf6, 0xc3, 0xb1, 0xac, 0xc9, 0xa8, 0xb8, 0x69,
	0x38, 0x8a, 0xa1, 0x43, 0x58, 0xb3, 0xa9, 0xf5, 0xfe, 0x5a, 0x8e, 0x1c, 0x13, 0xe2, 0xb1, 0xa9,
	0x8c, 0x1d, 0x28, 0xda, 0x0e, 0x13, 0x3a, 0xc5, 0x02, 0xd3, 0x7a, 0x5f, 0xce, 0xc8, 0xa9, 0x87,
	0xce, 0x0e, 0xf7, 0xa1, 0xcf, 0x61, 0x7d, 0x68, 0xb2, 0x80, 0x44, 0x48, 0xa1, 0x0d, 0x42, 0xed,
	0xc4, 0xa0, 0x8a, 0x78, 0x8d, 0x87, 0x75, 0x19, 0xe5, 0x2f, 0x5c, 0xe8, 0x14, 0xbf, 0xbf, 0x3d,
	0xcf, 0xbf, 0x34, 0x7d, 0xbb, 0xbc, 0x24, 0xee, 0x53, 0x64, 0xa2, 0x5d, 0x28, 0x79, 0x2e, 0x25,
	0x43, 0xda, 0x0b, 0x48, 0x60, 0xfa, 0x7d, 0x1a, 0x94, 0xb3, 0x82, 0xa8, 0xe8, 0xb9, 0xb4, 0x45,
	0x7b, 0x41, 0x57, 0x38, 0x2b, 0x7f, 0xa7, 0xa0, 0xa0, 0x4e, 0x9a, 0x4f, 0xee, 0xd2, 0x71, 0xdd,
	0x78, 0x72, 0x29, 0x39, 0x39, 0xe9, 0x93, 0x93, 0x5b, 0x83, 0x8c, 0xb8, 0x40, 0xe1, 0x54, 0xa5,
	0x81, 0x1e, 0x02, 0x24, 0x93, 0x09, 0x67, 0x98, 0x8b, 0xe7, 0x81, 0xce, 0xe2, 0x8d, 0x48, 0x40,
	0x5a, 0x7c, 0x16, 0x1e, 0xdd, 0x6d, 0xff, 0xe1, 0xc7, 0xa5, 0x9c, 0x6c, 0x5e, 0x59, 0x4c, 0xe5,
	0x10, 0xf2, 0x4a, 0x4c, 0xd9, 0xbb, 0xac, 0x92, 0x12, 0x6d, 0xa8, 0x19, 0xdb, 0xbf, 0xa6, 0x21,
	0xcd, 0x1f, 0x05, 0x5a, 0x06, 0x38, 0xae, 0xbe, 0x36, 0x48, 0xa7, 0x5b, 0xc5, 0x5d, 0x6d, 0x0e,
	0x15, 0x20, 0x2b, 0x6c, 0xa3, 0xad, 0x6b, 0x29, 0xb4, 0x0e, 0xab, 0x8d, 0x6a, 0x5b, 0x97, 0x51,
	0xd2, 0x69, 0x9c, 0xd5, 0xeb, 0x2d, 0x43, 0xd7, 0xe6, 0xd1, 0x7f, 0xe0, 0x9e, 0x12, 0xa8, 0x55,
	0xb1, 0x4e, 0x74, 0xa3, 0xda, 0xea, 0x6a, 0x0b, 0x68, 0x1f, 0x1e, 0x2b, 0xa1, 0xee, 0xc9, 0xa9,
	0x0c, 0x57, 0x75, 0xdd, 0xd0, 0x49, 0xf7, 0x84, 0xe8, 0xcd, 0x0e, 0x77, 0x68, 0x69, 0xb4, 0x0a,
	0x25, 0x81, 0xc4, 0x46, 0xcc, 0x9c, 0x89, 0x4b, 0x9e, 0xb6, 0xaa, 0x6f, 0x0d, 0x4c, 0x3a, 0xaf,
	0x9a, 0xa7, 0xa7, 0x86, 0xae, 0x2d, 0xa2, 0x32, 0xac, 0xa9, 0x01, 0x1d, 0x1b, 0x6f, 0x48, 0xf7,
	0xcd, 0x89, 0xb6, 0x84, 0xee, 0x03, 0x8a, 0x23, 0x04, 0x1b, 0xdf, 0x1a, 0xb8, 0x63, 0xe8, 0x5a,
	0xf6, 0xc6, 0x8c, 0x93, 0xb6, 0xa1, 0xe5, 0xd0, 0x06, 0x54, 0xd4, 0x88, 0xf8, 0xa3, 0x93, 0xf6,
	0x49, 0xb7, 0xd1, 0x6c, 0x1f, 0x6b, 0x10, 0x1f, 0x2f, 0xca, 0x94, 0x2d, 0x1b, 0xba, 0x96, 0x47,
	0xbb, 0xb0, 0xad, 0x86, 0xda, 0x27, 0xa4, 0xd6, 0xa8, 0xb6, 0x5a, 0x46, 0xfb, 0xd8, 0x90, 0x15,
	0xea, 0x27, 0x67, 0x58, 0x2b, 0xa0, 0xa7, 0xb0, 0xa7, 0xe2, 0x12, 0x50, 0xe7, 0xac, 0x56, 0x33,
	0x3a, 0x1d, 0x05, 0x5c, 0x44, 0xff, 0x85, 0x27, 0x37, 0x83, 0xeb, 0xd5, 0x66, 0xcb, 0xd0, 0x25,
	0xb6, 0xd3, 0xfc, 0x4e, 0x5b, 0x46, 0x9b, 0xf0, 0x60, 0x02, 0xca, 0x91, 0x3a, 0x3f, 0x16, 0x69,
	0x19, 0xf5, 0xae, 0x56, 0x9a, 0xe6, 0x8a, 0x22, 0xe4, 0xd4, 0x68, 0x57, 0x5b, 0xdd, 0xb7, 0xc9,
	0xe0, 0x34, 0xbe, 0x6c, 0x01, 0xe5, 0xcb, 0x5e, 0x51, 0xbf, 0xc3, 0xfe, 0x9e, 0x82, 0xbc, 0xf2,
	0xa5, 0x12, 0x3d, 0x80, 0x5c, 0xa4, 0x24, 0x91, 0xc8, 0x64, 0x43, 0x19, 0xb1, 0xd1, 0x26, 0x84,
	0x57, 0x8b, 0xb8, 0x5c, 0xfe, 0xe5, 0x67, 0x08, 0x48, 0x57, 0x9b, 0x4b, 0xff, 0x1a, 0x64, 0x5c,
	0xcf, 0xb5, 0xe4, 0xef, 0xd8, 0x05, 0x2c, 0x0d, 0x54, 0x81, 0xac, 0xe5, 0xb9, 0x01, 0x75, 0x03,
	0x26, 0x84, 0x23, 0x87, 0x63, 0x1b, 0x69, 0xb0, 0xc0, 0x9c, 0xbe, 0xd0, 0xd6, 0x02, 0xe6, 0xff,
	0xa2, 0x0d, 0xc8, 0xf3, 0x9f, 0xe7, 0xe4, 0x22, 0xb0, 0xc8, 0x88, 0x09, 0x3d, 0x48, 0xe3, 0x1c,
	0x77, 0x9d, 0x05, 0xd6, 0x6b, 0x76, 0xf4, 0x05, 0xa4, 0xf9, 0x0b, 0x42, 0x87, 0xb0, 0x28, 0x3f,
	0x43, 0xd0, 0xca, 0xb5, 0x9f, 0xcb, 0x95, 0xd2, 0xd4, 0x43, 0xdb, 0x4f, 0x1d, 0xa6, 0xde, 0x2d,
	0x8a, 0xdf, 0xf7, 0x9f, 0xfd, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x71, 0xf2, 0x1d, 0x6f, 0xff, 0x0f,
	0x00, 0x00,
}
